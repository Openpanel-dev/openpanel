
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ShareOverview` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model ShareOverview
 * 
 */
export type ShareOverviewModel = runtime.Types.Result.DefaultSelection<Prisma.$ShareOverviewPayload>

export type AggregateShareOverview = {
  _count: ShareOverviewCountAggregateOutputType | null
  _min: ShareOverviewMinAggregateOutputType | null
  _max: ShareOverviewMaxAggregateOutputType | null
}

export type ShareOverviewMinAggregateOutputType = {
  id: string | null
  projectId: string | null
  organizationId: string | null
  public: boolean | null
  password: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ShareOverviewMaxAggregateOutputType = {
  id: string | null
  projectId: string | null
  organizationId: string | null
  public: boolean | null
  password: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ShareOverviewCountAggregateOutputType = {
  id: number
  projectId: number
  organizationId: number
  public: number
  password: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ShareOverviewMinAggregateInputType = {
  id?: true
  projectId?: true
  organizationId?: true
  public?: true
  password?: true
  createdAt?: true
  updatedAt?: true
}

export type ShareOverviewMaxAggregateInputType = {
  id?: true
  projectId?: true
  organizationId?: true
  public?: true
  password?: true
  createdAt?: true
  updatedAt?: true
}

export type ShareOverviewCountAggregateInputType = {
  id?: true
  projectId?: true
  organizationId?: true
  public?: true
  password?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ShareOverviewAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ShareOverview to aggregate.
   */
  where?: Prisma.ShareOverviewWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ShareOverviews to fetch.
   */
  orderBy?: Prisma.ShareOverviewOrderByWithRelationInput | Prisma.ShareOverviewOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ShareOverviewWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ShareOverviews from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ShareOverviews.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ShareOverviews
  **/
  _count?: true | ShareOverviewCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ShareOverviewMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ShareOverviewMaxAggregateInputType
}

export type GetShareOverviewAggregateType<T extends ShareOverviewAggregateArgs> = {
      [P in keyof T & keyof AggregateShareOverview]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateShareOverview[P]>
    : Prisma.GetScalarType<T[P], AggregateShareOverview[P]>
}




export type ShareOverviewGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ShareOverviewWhereInput
  orderBy?: Prisma.ShareOverviewOrderByWithAggregationInput | Prisma.ShareOverviewOrderByWithAggregationInput[]
  by: Prisma.ShareOverviewScalarFieldEnum[] | Prisma.ShareOverviewScalarFieldEnum
  having?: Prisma.ShareOverviewScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ShareOverviewCountAggregateInputType | true
  _min?: ShareOverviewMinAggregateInputType
  _max?: ShareOverviewMaxAggregateInputType
}

export type ShareOverviewGroupByOutputType = {
  id: string
  projectId: string
  organizationId: string
  public: boolean
  password: string | null
  createdAt: Date
  updatedAt: Date
  _count: ShareOverviewCountAggregateOutputType | null
  _min: ShareOverviewMinAggregateOutputType | null
  _max: ShareOverviewMaxAggregateOutputType | null
}

type GetShareOverviewGroupByPayload<T extends ShareOverviewGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ShareOverviewGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ShareOverviewGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ShareOverviewGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ShareOverviewGroupByOutputType[P]>
      }
    >
  >



export type ShareOverviewWhereInput = {
  AND?: Prisma.ShareOverviewWhereInput | Prisma.ShareOverviewWhereInput[]
  OR?: Prisma.ShareOverviewWhereInput[]
  NOT?: Prisma.ShareOverviewWhereInput | Prisma.ShareOverviewWhereInput[]
  id?: Prisma.StringFilter<"ShareOverview"> | string
  projectId?: Prisma.StringFilter<"ShareOverview"> | string
  organizationId?: Prisma.StringFilter<"ShareOverview"> | string
  public?: Prisma.BoolFilter<"ShareOverview"> | boolean
  password?: Prisma.StringNullableFilter<"ShareOverview"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ShareOverview"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ShareOverview"> | Date | string
  project?: Prisma.XOR<Prisma.ProjectScalarRelationFilter, Prisma.ProjectWhereInput>
  organization?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
}

export type ShareOverviewOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  public?: Prisma.SortOrder
  password?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  project?: Prisma.ProjectOrderByWithRelationInput
  organization?: Prisma.OrganizationOrderByWithRelationInput
}

export type ShareOverviewWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  projectId?: string
  AND?: Prisma.ShareOverviewWhereInput | Prisma.ShareOverviewWhereInput[]
  OR?: Prisma.ShareOverviewWhereInput[]
  NOT?: Prisma.ShareOverviewWhereInput | Prisma.ShareOverviewWhereInput[]
  organizationId?: Prisma.StringFilter<"ShareOverview"> | string
  public?: Prisma.BoolFilter<"ShareOverview"> | boolean
  password?: Prisma.StringNullableFilter<"ShareOverview"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ShareOverview"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ShareOverview"> | Date | string
  project?: Prisma.XOR<Prisma.ProjectScalarRelationFilter, Prisma.ProjectWhereInput>
  organization?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
}, "id" | "projectId">

export type ShareOverviewOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  public?: Prisma.SortOrder
  password?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ShareOverviewCountOrderByAggregateInput
  _max?: Prisma.ShareOverviewMaxOrderByAggregateInput
  _min?: Prisma.ShareOverviewMinOrderByAggregateInput
}

export type ShareOverviewScalarWhereWithAggregatesInput = {
  AND?: Prisma.ShareOverviewScalarWhereWithAggregatesInput | Prisma.ShareOverviewScalarWhereWithAggregatesInput[]
  OR?: Prisma.ShareOverviewScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ShareOverviewScalarWhereWithAggregatesInput | Prisma.ShareOverviewScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ShareOverview"> | string
  projectId?: Prisma.StringWithAggregatesFilter<"ShareOverview"> | string
  organizationId?: Prisma.StringWithAggregatesFilter<"ShareOverview"> | string
  public?: Prisma.BoolWithAggregatesFilter<"ShareOverview"> | boolean
  password?: Prisma.StringNullableWithAggregatesFilter<"ShareOverview"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ShareOverview"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ShareOverview"> | Date | string
}

export type ShareOverviewCreateInput = {
  id: string
  public?: boolean
  password?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  project: Prisma.ProjectCreateNestedOneWithoutShareInput
  organization: Prisma.OrganizationCreateNestedOneWithoutShareOverviewInput
}

export type ShareOverviewUncheckedCreateInput = {
  id: string
  projectId: string
  organizationId: string
  public?: boolean
  password?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShareOverviewUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  public?: Prisma.BoolFieldUpdateOperationsInput | boolean
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  project?: Prisma.ProjectUpdateOneRequiredWithoutShareNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutShareOverviewNestedInput
}

export type ShareOverviewUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  projectId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  public?: Prisma.BoolFieldUpdateOperationsInput | boolean
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShareOverviewCreateManyInput = {
  id: string
  projectId: string
  organizationId: string
  public?: boolean
  password?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShareOverviewUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  public?: Prisma.BoolFieldUpdateOperationsInput | boolean
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShareOverviewUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  projectId?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  public?: Prisma.BoolFieldUpdateOperationsInput | boolean
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShareOverviewListRelationFilter = {
  every?: Prisma.ShareOverviewWhereInput
  some?: Prisma.ShareOverviewWhereInput
  none?: Prisma.ShareOverviewWhereInput
}

export type ShareOverviewOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ShareOverviewNullableScalarRelationFilter = {
  is?: Prisma.ShareOverviewWhereInput | null
  isNot?: Prisma.ShareOverviewWhereInput | null
}

export type ShareOverviewCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  public?: Prisma.SortOrder
  password?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ShareOverviewMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  public?: Prisma.SortOrder
  password?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ShareOverviewMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  projectId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  public?: Prisma.SortOrder
  password?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ShareOverviewCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.ShareOverviewCreateWithoutOrganizationInput, Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput> | Prisma.ShareOverviewCreateWithoutOrganizationInput[] | Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ShareOverviewCreateOrConnectWithoutOrganizationInput | Prisma.ShareOverviewCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.ShareOverviewCreateManyOrganizationInputEnvelope
  connect?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
}

export type ShareOverviewUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.ShareOverviewCreateWithoutOrganizationInput, Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput> | Prisma.ShareOverviewCreateWithoutOrganizationInput[] | Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ShareOverviewCreateOrConnectWithoutOrganizationInput | Prisma.ShareOverviewCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.ShareOverviewCreateManyOrganizationInputEnvelope
  connect?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
}

export type ShareOverviewUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.ShareOverviewCreateWithoutOrganizationInput, Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput> | Prisma.ShareOverviewCreateWithoutOrganizationInput[] | Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ShareOverviewCreateOrConnectWithoutOrganizationInput | Prisma.ShareOverviewCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.ShareOverviewUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.ShareOverviewUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.ShareOverviewCreateManyOrganizationInputEnvelope
  set?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
  disconnect?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
  delete?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
  connect?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
  update?: Prisma.ShareOverviewUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.ShareOverviewUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.ShareOverviewUpdateManyWithWhereWithoutOrganizationInput | Prisma.ShareOverviewUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.ShareOverviewScalarWhereInput | Prisma.ShareOverviewScalarWhereInput[]
}

export type ShareOverviewUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.ShareOverviewCreateWithoutOrganizationInput, Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput> | Prisma.ShareOverviewCreateWithoutOrganizationInput[] | Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ShareOverviewCreateOrConnectWithoutOrganizationInput | Prisma.ShareOverviewCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.ShareOverviewUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.ShareOverviewUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.ShareOverviewCreateManyOrganizationInputEnvelope
  set?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
  disconnect?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
  delete?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
  connect?: Prisma.ShareOverviewWhereUniqueInput | Prisma.ShareOverviewWhereUniqueInput[]
  update?: Prisma.ShareOverviewUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.ShareOverviewUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.ShareOverviewUpdateManyWithWhereWithoutOrganizationInput | Prisma.ShareOverviewUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.ShareOverviewScalarWhereInput | Prisma.ShareOverviewScalarWhereInput[]
}

export type ShareOverviewCreateNestedOneWithoutProjectInput = {
  create?: Prisma.XOR<Prisma.ShareOverviewCreateWithoutProjectInput, Prisma.ShareOverviewUncheckedCreateWithoutProjectInput>
  connectOrCreate?: Prisma.ShareOverviewCreateOrConnectWithoutProjectInput
  connect?: Prisma.ShareOverviewWhereUniqueInput
}

export type ShareOverviewUncheckedCreateNestedOneWithoutProjectInput = {
  create?: Prisma.XOR<Prisma.ShareOverviewCreateWithoutProjectInput, Prisma.ShareOverviewUncheckedCreateWithoutProjectInput>
  connectOrCreate?: Prisma.ShareOverviewCreateOrConnectWithoutProjectInput
  connect?: Prisma.ShareOverviewWhereUniqueInput
}

export type ShareOverviewUpdateOneWithoutProjectNestedInput = {
  create?: Prisma.XOR<Prisma.ShareOverviewCreateWithoutProjectInput, Prisma.ShareOverviewUncheckedCreateWithoutProjectInput>
  connectOrCreate?: Prisma.ShareOverviewCreateOrConnectWithoutProjectInput
  upsert?: Prisma.ShareOverviewUpsertWithoutProjectInput
  disconnect?: Prisma.ShareOverviewWhereInput | boolean
  delete?: Prisma.ShareOverviewWhereInput | boolean
  connect?: Prisma.ShareOverviewWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ShareOverviewUpdateToOneWithWhereWithoutProjectInput, Prisma.ShareOverviewUpdateWithoutProjectInput>, Prisma.ShareOverviewUncheckedUpdateWithoutProjectInput>
}

export type ShareOverviewUncheckedUpdateOneWithoutProjectNestedInput = {
  create?: Prisma.XOR<Prisma.ShareOverviewCreateWithoutProjectInput, Prisma.ShareOverviewUncheckedCreateWithoutProjectInput>
  connectOrCreate?: Prisma.ShareOverviewCreateOrConnectWithoutProjectInput
  upsert?: Prisma.ShareOverviewUpsertWithoutProjectInput
  disconnect?: Prisma.ShareOverviewWhereInput | boolean
  delete?: Prisma.ShareOverviewWhereInput | boolean
  connect?: Prisma.ShareOverviewWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ShareOverviewUpdateToOneWithWhereWithoutProjectInput, Prisma.ShareOverviewUpdateWithoutProjectInput>, Prisma.ShareOverviewUncheckedUpdateWithoutProjectInput>
}

export type ShareOverviewCreateWithoutOrganizationInput = {
  id: string
  public?: boolean
  password?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  project: Prisma.ProjectCreateNestedOneWithoutShareInput
}

export type ShareOverviewUncheckedCreateWithoutOrganizationInput = {
  id: string
  projectId: string
  public?: boolean
  password?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShareOverviewCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.ShareOverviewWhereUniqueInput
  create: Prisma.XOR<Prisma.ShareOverviewCreateWithoutOrganizationInput, Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput>
}

export type ShareOverviewCreateManyOrganizationInputEnvelope = {
  data: Prisma.ShareOverviewCreateManyOrganizationInput | Prisma.ShareOverviewCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type ShareOverviewUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.ShareOverviewWhereUniqueInput
  update: Prisma.XOR<Prisma.ShareOverviewUpdateWithoutOrganizationInput, Prisma.ShareOverviewUncheckedUpdateWithoutOrganizationInput>
  create: Prisma.XOR<Prisma.ShareOverviewCreateWithoutOrganizationInput, Prisma.ShareOverviewUncheckedCreateWithoutOrganizationInput>
}

export type ShareOverviewUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.ShareOverviewWhereUniqueInput
  data: Prisma.XOR<Prisma.ShareOverviewUpdateWithoutOrganizationInput, Prisma.ShareOverviewUncheckedUpdateWithoutOrganizationInput>
}

export type ShareOverviewUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.ShareOverviewScalarWhereInput
  data: Prisma.XOR<Prisma.ShareOverviewUpdateManyMutationInput, Prisma.ShareOverviewUncheckedUpdateManyWithoutOrganizationInput>
}

export type ShareOverviewScalarWhereInput = {
  AND?: Prisma.ShareOverviewScalarWhereInput | Prisma.ShareOverviewScalarWhereInput[]
  OR?: Prisma.ShareOverviewScalarWhereInput[]
  NOT?: Prisma.ShareOverviewScalarWhereInput | Prisma.ShareOverviewScalarWhereInput[]
  id?: Prisma.StringFilter<"ShareOverview"> | string
  projectId?: Prisma.StringFilter<"ShareOverview"> | string
  organizationId?: Prisma.StringFilter<"ShareOverview"> | string
  public?: Prisma.BoolFilter<"ShareOverview"> | boolean
  password?: Prisma.StringNullableFilter<"ShareOverview"> | string | null
  createdAt?: Prisma.DateTimeFilter<"ShareOverview"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ShareOverview"> | Date | string
}

export type ShareOverviewCreateWithoutProjectInput = {
  id: string
  public?: boolean
  password?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
  organization: Prisma.OrganizationCreateNestedOneWithoutShareOverviewInput
}

export type ShareOverviewUncheckedCreateWithoutProjectInput = {
  id: string
  organizationId: string
  public?: boolean
  password?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShareOverviewCreateOrConnectWithoutProjectInput = {
  where: Prisma.ShareOverviewWhereUniqueInput
  create: Prisma.XOR<Prisma.ShareOverviewCreateWithoutProjectInput, Prisma.ShareOverviewUncheckedCreateWithoutProjectInput>
}

export type ShareOverviewUpsertWithoutProjectInput = {
  update: Prisma.XOR<Prisma.ShareOverviewUpdateWithoutProjectInput, Prisma.ShareOverviewUncheckedUpdateWithoutProjectInput>
  create: Prisma.XOR<Prisma.ShareOverviewCreateWithoutProjectInput, Prisma.ShareOverviewUncheckedCreateWithoutProjectInput>
  where?: Prisma.ShareOverviewWhereInput
}

export type ShareOverviewUpdateToOneWithWhereWithoutProjectInput = {
  where?: Prisma.ShareOverviewWhereInput
  data: Prisma.XOR<Prisma.ShareOverviewUpdateWithoutProjectInput, Prisma.ShareOverviewUncheckedUpdateWithoutProjectInput>
}

export type ShareOverviewUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  public?: Prisma.BoolFieldUpdateOperationsInput | boolean
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutShareOverviewNestedInput
}

export type ShareOverviewUncheckedUpdateWithoutProjectInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  public?: Prisma.BoolFieldUpdateOperationsInput | boolean
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShareOverviewCreateManyOrganizationInput = {
  id: string
  projectId: string
  public?: boolean
  password?: string | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShareOverviewUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  public?: Prisma.BoolFieldUpdateOperationsInput | boolean
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  project?: Prisma.ProjectUpdateOneRequiredWithoutShareNestedInput
}

export type ShareOverviewUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  projectId?: Prisma.StringFieldUpdateOperationsInput | string
  public?: Prisma.BoolFieldUpdateOperationsInput | boolean
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShareOverviewUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  projectId?: Prisma.StringFieldUpdateOperationsInput | string
  public?: Prisma.BoolFieldUpdateOperationsInput | boolean
  password?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type ShareOverviewSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  projectId?: boolean
  organizationId?: boolean
  public?: boolean
  password?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["shareOverview"]>

export type ShareOverviewSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  projectId?: boolean
  organizationId?: boolean
  public?: boolean
  password?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["shareOverview"]>

export type ShareOverviewSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  projectId?: boolean
  organizationId?: boolean
  public?: boolean
  password?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["shareOverview"]>

export type ShareOverviewSelectScalar = {
  id?: boolean
  projectId?: boolean
  organizationId?: boolean
  public?: boolean
  password?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ShareOverviewOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "projectId" | "organizationId" | "public" | "password" | "createdAt" | "updatedAt", ExtArgs["result"]["shareOverview"]>
export type ShareOverviewInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}
export type ShareOverviewIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}
export type ShareOverviewIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  project?: boolean | Prisma.ProjectDefaultArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}

export type $ShareOverviewPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ShareOverview"
  objects: {
    project: Prisma.$ProjectPayload<ExtArgs>
    organization: Prisma.$OrganizationPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    projectId: string
    organizationId: string
    public: boolean
    password: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["shareOverview"]>
  composites: {}
}

export type ShareOverviewGetPayload<S extends boolean | null | undefined | ShareOverviewDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload, S>

export type ShareOverviewCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ShareOverviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ShareOverviewCountAggregateInputType | true
  }

export interface ShareOverviewDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShareOverview'], meta: { name: 'ShareOverview' } }
  /**
   * Find zero or one ShareOverview that matches the filter.
   * @param {ShareOverviewFindUniqueArgs} args - Arguments to find a ShareOverview
   * @example
   * // Get one ShareOverview
   * const shareOverview = await prisma.shareOverview.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ShareOverviewFindUniqueArgs>(args: Prisma.SelectSubset<T, ShareOverviewFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ShareOverviewClient<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ShareOverview that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ShareOverviewFindUniqueOrThrowArgs} args - Arguments to find a ShareOverview
   * @example
   * // Get one ShareOverview
   * const shareOverview = await prisma.shareOverview.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ShareOverviewFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ShareOverviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ShareOverviewClient<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ShareOverview that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShareOverviewFindFirstArgs} args - Arguments to find a ShareOverview
   * @example
   * // Get one ShareOverview
   * const shareOverview = await prisma.shareOverview.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ShareOverviewFindFirstArgs>(args?: Prisma.SelectSubset<T, ShareOverviewFindFirstArgs<ExtArgs>>): Prisma.Prisma__ShareOverviewClient<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ShareOverview that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShareOverviewFindFirstOrThrowArgs} args - Arguments to find a ShareOverview
   * @example
   * // Get one ShareOverview
   * const shareOverview = await prisma.shareOverview.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ShareOverviewFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ShareOverviewFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ShareOverviewClient<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ShareOverviews that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShareOverviewFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ShareOverviews
   * const shareOverviews = await prisma.shareOverview.findMany()
   * 
   * // Get first 10 ShareOverviews
   * const shareOverviews = await prisma.shareOverview.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const shareOverviewWithIdOnly = await prisma.shareOverview.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ShareOverviewFindManyArgs>(args?: Prisma.SelectSubset<T, ShareOverviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ShareOverview.
   * @param {ShareOverviewCreateArgs} args - Arguments to create a ShareOverview.
   * @example
   * // Create one ShareOverview
   * const ShareOverview = await prisma.shareOverview.create({
   *   data: {
   *     // ... data to create a ShareOverview
   *   }
   * })
   * 
   */
  create<T extends ShareOverviewCreateArgs>(args: Prisma.SelectSubset<T, ShareOverviewCreateArgs<ExtArgs>>): Prisma.Prisma__ShareOverviewClient<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ShareOverviews.
   * @param {ShareOverviewCreateManyArgs} args - Arguments to create many ShareOverviews.
   * @example
   * // Create many ShareOverviews
   * const shareOverview = await prisma.shareOverview.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ShareOverviewCreateManyArgs>(args?: Prisma.SelectSubset<T, ShareOverviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ShareOverviews and returns the data saved in the database.
   * @param {ShareOverviewCreateManyAndReturnArgs} args - Arguments to create many ShareOverviews.
   * @example
   * // Create many ShareOverviews
   * const shareOverview = await prisma.shareOverview.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ShareOverviews and only return the `id`
   * const shareOverviewWithIdOnly = await prisma.shareOverview.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ShareOverviewCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ShareOverviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ShareOverview.
   * @param {ShareOverviewDeleteArgs} args - Arguments to delete one ShareOverview.
   * @example
   * // Delete one ShareOverview
   * const ShareOverview = await prisma.shareOverview.delete({
   *   where: {
   *     // ... filter to delete one ShareOverview
   *   }
   * })
   * 
   */
  delete<T extends ShareOverviewDeleteArgs>(args: Prisma.SelectSubset<T, ShareOverviewDeleteArgs<ExtArgs>>): Prisma.Prisma__ShareOverviewClient<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ShareOverview.
   * @param {ShareOverviewUpdateArgs} args - Arguments to update one ShareOverview.
   * @example
   * // Update one ShareOverview
   * const shareOverview = await prisma.shareOverview.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ShareOverviewUpdateArgs>(args: Prisma.SelectSubset<T, ShareOverviewUpdateArgs<ExtArgs>>): Prisma.Prisma__ShareOverviewClient<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ShareOverviews.
   * @param {ShareOverviewDeleteManyArgs} args - Arguments to filter ShareOverviews to delete.
   * @example
   * // Delete a few ShareOverviews
   * const { count } = await prisma.shareOverview.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ShareOverviewDeleteManyArgs>(args?: Prisma.SelectSubset<T, ShareOverviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ShareOverviews.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShareOverviewUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ShareOverviews
   * const shareOverview = await prisma.shareOverview.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ShareOverviewUpdateManyArgs>(args: Prisma.SelectSubset<T, ShareOverviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ShareOverviews and returns the data updated in the database.
   * @param {ShareOverviewUpdateManyAndReturnArgs} args - Arguments to update many ShareOverviews.
   * @example
   * // Update many ShareOverviews
   * const shareOverview = await prisma.shareOverview.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ShareOverviews and only return the `id`
   * const shareOverviewWithIdOnly = await prisma.shareOverview.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ShareOverviewUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ShareOverviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ShareOverview.
   * @param {ShareOverviewUpsertArgs} args - Arguments to update or create a ShareOverview.
   * @example
   * // Update or create a ShareOverview
   * const shareOverview = await prisma.shareOverview.upsert({
   *   create: {
   *     // ... data to create a ShareOverview
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ShareOverview we want to update
   *   }
   * })
   */
  upsert<T extends ShareOverviewUpsertArgs>(args: Prisma.SelectSubset<T, ShareOverviewUpsertArgs<ExtArgs>>): Prisma.Prisma__ShareOverviewClient<runtime.Types.Result.GetResult<Prisma.$ShareOverviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ShareOverviews.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShareOverviewCountArgs} args - Arguments to filter ShareOverviews to count.
   * @example
   * // Count the number of ShareOverviews
   * const count = await prisma.shareOverview.count({
   *   where: {
   *     // ... the filter for the ShareOverviews we want to count
   *   }
   * })
  **/
  count<T extends ShareOverviewCountArgs>(
    args?: Prisma.Subset<T, ShareOverviewCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ShareOverviewCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ShareOverview.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShareOverviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ShareOverviewAggregateArgs>(args: Prisma.Subset<T, ShareOverviewAggregateArgs>): Prisma.PrismaPromise<GetShareOverviewAggregateType<T>>

  /**
   * Group by ShareOverview.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShareOverviewGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ShareOverviewGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ShareOverviewGroupByArgs['orderBy'] }
      : { orderBy?: ShareOverviewGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ShareOverviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShareOverviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ShareOverview model
 */
readonly fields: ShareOverviewFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ShareOverview.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ShareOverviewClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  project<T extends Prisma.ProjectDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProjectDefaultArgs<ExtArgs>>): Prisma.Prisma__ProjectClient<runtime.Types.Result.GetResult<Prisma.$ProjectPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ShareOverview model
 */
export interface ShareOverviewFieldRefs {
  readonly id: Prisma.FieldRef<"ShareOverview", 'String'>
  readonly projectId: Prisma.FieldRef<"ShareOverview", 'String'>
  readonly organizationId: Prisma.FieldRef<"ShareOverview", 'String'>
  readonly public: Prisma.FieldRef<"ShareOverview", 'Boolean'>
  readonly password: Prisma.FieldRef<"ShareOverview", 'String'>
  readonly createdAt: Prisma.FieldRef<"ShareOverview", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ShareOverview", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ShareOverview findUnique
 */
export type ShareOverviewFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
  /**
   * Filter, which ShareOverview to fetch.
   */
  where: Prisma.ShareOverviewWhereUniqueInput
}

/**
 * ShareOverview findUniqueOrThrow
 */
export type ShareOverviewFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
  /**
   * Filter, which ShareOverview to fetch.
   */
  where: Prisma.ShareOverviewWhereUniqueInput
}

/**
 * ShareOverview findFirst
 */
export type ShareOverviewFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
  /**
   * Filter, which ShareOverview to fetch.
   */
  where?: Prisma.ShareOverviewWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ShareOverviews to fetch.
   */
  orderBy?: Prisma.ShareOverviewOrderByWithRelationInput | Prisma.ShareOverviewOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ShareOverviews.
   */
  cursor?: Prisma.ShareOverviewWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ShareOverviews from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ShareOverviews.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ShareOverviews.
   */
  distinct?: Prisma.ShareOverviewScalarFieldEnum | Prisma.ShareOverviewScalarFieldEnum[]
}

/**
 * ShareOverview findFirstOrThrow
 */
export type ShareOverviewFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
  /**
   * Filter, which ShareOverview to fetch.
   */
  where?: Prisma.ShareOverviewWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ShareOverviews to fetch.
   */
  orderBy?: Prisma.ShareOverviewOrderByWithRelationInput | Prisma.ShareOverviewOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ShareOverviews.
   */
  cursor?: Prisma.ShareOverviewWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ShareOverviews from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ShareOverviews.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ShareOverviews.
   */
  distinct?: Prisma.ShareOverviewScalarFieldEnum | Prisma.ShareOverviewScalarFieldEnum[]
}

/**
 * ShareOverview findMany
 */
export type ShareOverviewFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
  /**
   * Filter, which ShareOverviews to fetch.
   */
  where?: Prisma.ShareOverviewWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ShareOverviews to fetch.
   */
  orderBy?: Prisma.ShareOverviewOrderByWithRelationInput | Prisma.ShareOverviewOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ShareOverviews.
   */
  cursor?: Prisma.ShareOverviewWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ShareOverviews from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ShareOverviews.
   */
  skip?: number
  distinct?: Prisma.ShareOverviewScalarFieldEnum | Prisma.ShareOverviewScalarFieldEnum[]
}

/**
 * ShareOverview create
 */
export type ShareOverviewCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
  /**
   * The data needed to create a ShareOverview.
   */
  data: Prisma.XOR<Prisma.ShareOverviewCreateInput, Prisma.ShareOverviewUncheckedCreateInput>
}

/**
 * ShareOverview createMany
 */
export type ShareOverviewCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ShareOverviews.
   */
  data: Prisma.ShareOverviewCreateManyInput | Prisma.ShareOverviewCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ShareOverview createManyAndReturn
 */
export type ShareOverviewCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * The data used to create many ShareOverviews.
   */
  data: Prisma.ShareOverviewCreateManyInput | Prisma.ShareOverviewCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ShareOverview update
 */
export type ShareOverviewUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
  /**
   * The data needed to update a ShareOverview.
   */
  data: Prisma.XOR<Prisma.ShareOverviewUpdateInput, Prisma.ShareOverviewUncheckedUpdateInput>
  /**
   * Choose, which ShareOverview to update.
   */
  where: Prisma.ShareOverviewWhereUniqueInput
}

/**
 * ShareOverview updateMany
 */
export type ShareOverviewUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ShareOverviews.
   */
  data: Prisma.XOR<Prisma.ShareOverviewUpdateManyMutationInput, Prisma.ShareOverviewUncheckedUpdateManyInput>
  /**
   * Filter which ShareOverviews to update
   */
  where?: Prisma.ShareOverviewWhereInput
  /**
   * Limit how many ShareOverviews to update.
   */
  limit?: number
}

/**
 * ShareOverview updateManyAndReturn
 */
export type ShareOverviewUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * The data used to update ShareOverviews.
   */
  data: Prisma.XOR<Prisma.ShareOverviewUpdateManyMutationInput, Prisma.ShareOverviewUncheckedUpdateManyInput>
  /**
   * Filter which ShareOverviews to update
   */
  where?: Prisma.ShareOverviewWhereInput
  /**
   * Limit how many ShareOverviews to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ShareOverview upsert
 */
export type ShareOverviewUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
  /**
   * The filter to search for the ShareOverview to update in case it exists.
   */
  where: Prisma.ShareOverviewWhereUniqueInput
  /**
   * In case the ShareOverview found by the `where` argument doesn't exist, create a new ShareOverview with this data.
   */
  create: Prisma.XOR<Prisma.ShareOverviewCreateInput, Prisma.ShareOverviewUncheckedCreateInput>
  /**
   * In case the ShareOverview was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ShareOverviewUpdateInput, Prisma.ShareOverviewUncheckedUpdateInput>
}

/**
 * ShareOverview delete
 */
export type ShareOverviewDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
  /**
   * Filter which ShareOverview to delete.
   */
  where: Prisma.ShareOverviewWhereUniqueInput
}

/**
 * ShareOverview deleteMany
 */
export type ShareOverviewDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ShareOverviews to delete
   */
  where?: Prisma.ShareOverviewWhereInput
  /**
   * Limit how many ShareOverviews to delete.
   */
  limit?: number
}

/**
 * ShareOverview without action
 */
export type ShareOverviewDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShareOverview
   */
  select?: Prisma.ShareOverviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShareOverview
   */
  omit?: Prisma.ShareOverviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShareOverviewInclude<ExtArgs> | null
}
