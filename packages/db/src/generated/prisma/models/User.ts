/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from '@prisma/client/runtime/library';
import type * as $Enums from '../enums.ts';
import type * as Prisma from '../internal/prismaNamespace.ts';

/**
 * Model User
 *
 */
export type UserModel =
  runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>;

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null;
  _min: UserMinAggregateOutputType | null;
  _max: UserMaxAggregateOutputType | null;
};

export type UserMinAggregateOutputType = {
  id: string | null;
  email: string | null;
  firstName: string | null;
  lastName: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  deletedAt: Date | null;
};

export type UserMaxAggregateOutputType = {
  id: string | null;
  email: string | null;
  firstName: string | null;
  lastName: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  deletedAt: Date | null;
};

export type UserCountAggregateOutputType = {
  id: number;
  email: number;
  firstName: number;
  lastName: number;
  createdAt: number;
  updatedAt: number;
  deletedAt: number;
  _all: number;
};

export type UserMinAggregateInputType = {
  id?: true;
  email?: true;
  firstName?: true;
  lastName?: true;
  createdAt?: true;
  updatedAt?: true;
  deletedAt?: true;
};

export type UserMaxAggregateInputType = {
  id?: true;
  email?: true;
  firstName?: true;
  lastName?: true;
  createdAt?: true;
  updatedAt?: true;
  deletedAt?: true;
};

export type UserCountAggregateInputType = {
  id?: true;
  email?: true;
  firstName?: true;
  lastName?: true;
  createdAt?: true;
  updatedAt?: true;
  deletedAt?: true;
  _all?: true;
};

export type UserAggregateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned Users
   **/
  _count?: true | UserCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: UserMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: UserMaxAggregateInputType;
};

export type GetUserAggregateType<T extends UserAggregateArgs> = {
  [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>;
};

export type UserGroupByArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.UserWhereInput;
  orderBy?:
    | Prisma.UserOrderByWithAggregationInput
    | Prisma.UserOrderByWithAggregationInput[];
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum;
  having?: Prisma.UserScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: UserCountAggregateInputType | true;
  _min?: UserMinAggregateInputType;
  _max?: UserMaxAggregateInputType;
};

export type UserGroupByOutputType = {
  id: string;
  email: string;
  firstName: string | null;
  lastName: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  _count: UserCountAggregateOutputType | null;
  _min: UserMinAggregateOutputType | null;
  _max: UserMaxAggregateOutputType | null;
};

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> & {
      [P in keyof T & keyof UserGroupByOutputType]: P extends '_count'
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>;
    }
  >
>;

export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
  OR?: Prisma.UserWhereInput[];
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
  id?: Prisma.StringFilter<'User'> | string;
  email?: Prisma.StringFilter<'User'> | string;
  firstName?: Prisma.StringNullableFilter<'User'> | string | null;
  lastName?: Prisma.StringNullableFilter<'User'> | string | null;
  createdAt?: Prisma.DateTimeFilter<'User'> | Date | string;
  updatedAt?: Prisma.DateTimeFilter<'User'> | Date | string;
  deletedAt?: Prisma.DateTimeNullableFilter<'User'> | Date | string | null;
  createdOrganizations?: Prisma.OrganizationListRelationFilter;
  subscriptions?: Prisma.OrganizationListRelationFilter;
  membership?: Prisma.MemberListRelationFilter;
  sentInvites?: Prisma.MemberListRelationFilter;
  ProjectAccess?: Prisma.ProjectAccessListRelationFilter;
  sessions?: Prisma.SessionListRelationFilter;
  accounts?: Prisma.AccountListRelationFilter;
  invites?: Prisma.InviteListRelationFilter;
};

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdOrganizations?: Prisma.OrganizationOrderByRelationAggregateInput;
  subscriptions?: Prisma.OrganizationOrderByRelationAggregateInput;
  membership?: Prisma.MemberOrderByRelationAggregateInput;
  sentInvites?: Prisma.MemberOrderByRelationAggregateInput;
  ProjectAccess?: Prisma.ProjectAccessOrderByRelationAggregateInput;
  sessions?: Prisma.SessionOrderByRelationAggregateInput;
  accounts?: Prisma.AccountOrderByRelationAggregateInput;
  invites?: Prisma.InviteOrderByRelationAggregateInput;
};

export type UserWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    email?: string;
    AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
    OR?: Prisma.UserWhereInput[];
    NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[];
    firstName?: Prisma.StringNullableFilter<'User'> | string | null;
    lastName?: Prisma.StringNullableFilter<'User'> | string | null;
    createdAt?: Prisma.DateTimeFilter<'User'> | Date | string;
    updatedAt?: Prisma.DateTimeFilter<'User'> | Date | string;
    deletedAt?: Prisma.DateTimeNullableFilter<'User'> | Date | string | null;
    createdOrganizations?: Prisma.OrganizationListRelationFilter;
    subscriptions?: Prisma.OrganizationListRelationFilter;
    membership?: Prisma.MemberListRelationFilter;
    sentInvites?: Prisma.MemberListRelationFilter;
    ProjectAccess?: Prisma.ProjectAccessListRelationFilter;
    sessions?: Prisma.SessionListRelationFilter;
    accounts?: Prisma.AccountListRelationFilter;
    invites?: Prisma.InviteListRelationFilter;
  },
  'id' | 'email'
>;

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  firstName?: Prisma.SortOrderInput | Prisma.SortOrder;
  lastName?: Prisma.SortOrderInput | Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder;
  _count?: Prisma.UserCountOrderByAggregateInput;
  _max?: Prisma.UserMaxOrderByAggregateInput;
  _min?: Prisma.UserMinOrderByAggregateInput;
};

export type UserScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.UserScalarWhereWithAggregatesInput
    | Prisma.UserScalarWhereWithAggregatesInput[];
  OR?: Prisma.UserScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.UserScalarWhereWithAggregatesInput
    | Prisma.UserScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<'User'> | string;
  email?: Prisma.StringWithAggregatesFilter<'User'> | string;
  firstName?: Prisma.StringNullableWithAggregatesFilter<'User'> | string | null;
  lastName?: Prisma.StringNullableWithAggregatesFilter<'User'> | string | null;
  createdAt?: Prisma.DateTimeWithAggregatesFilter<'User'> | Date | string;
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<'User'> | Date | string;
  deletedAt?:
    | Prisma.DateTimeNullableWithAggregatesFilter<'User'>
    | Date
    | string
    | null;
};

export type UserCreateInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteCreateNestedManyWithoutCreatedByInput;
};

export type UserUncheckedCreateInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationUncheckedCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberUncheckedCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberUncheckedCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteUncheckedCreateNestedManyWithoutCreatedByInput;
};

export type UserUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUpdateManyWithoutCreatedByNestedInput;
};

export type UserUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUncheckedUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUncheckedUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUncheckedUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUncheckedUpdateManyWithoutCreatedByNestedInput;
};

export type UserCreateManyInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
};

export type UserUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
};

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
};

export type UserNullableScalarRelationFilter = {
  is?: Prisma.UserWhereInput | null;
  isNot?: Prisma.UserWhereInput | null;
};

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  firstName?: Prisma.SortOrder;
  lastName?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrder;
};

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  firstName?: Prisma.SortOrder;
  lastName?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrder;
};

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  firstName?: Prisma.SortOrder;
  lastName?: Prisma.SortOrder;
  createdAt?: Prisma.SortOrder;
  updatedAt?: Prisma.SortOrder;
  deletedAt?: Prisma.SortOrder;
};

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput;
  isNot?: Prisma.UserWhereInput;
};

export type UserCreateNestedOneWithoutCreatedOrganizationsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedOrganizationsInput,
    Prisma.UserUncheckedCreateWithoutCreatedOrganizationsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedOrganizationsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutSubscriptionsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutSubscriptionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubscriptionsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutCreatedOrganizationsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedOrganizationsInput,
    Prisma.UserUncheckedCreateWithoutCreatedOrganizationsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutCreatedOrganizationsInput;
  upsert?: Prisma.UserUpsertWithoutCreatedOrganizationsInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutCreatedOrganizationsInput,
      Prisma.UserUpdateWithoutCreatedOrganizationsInput
    >,
    Prisma.UserUncheckedUpdateWithoutCreatedOrganizationsInput
  >;
};

export type UserUpdateOneWithoutSubscriptionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutSubscriptionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSubscriptionsInput;
  upsert?: Prisma.UserUpsertWithoutSubscriptionsInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutSubscriptionsInput,
      Prisma.UserUpdateWithoutSubscriptionsInput
    >,
    Prisma.UserUncheckedUpdateWithoutSubscriptionsInput
  >;
};

export type UserCreateNestedOneWithoutAccountsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAccountsInput,
    Prisma.UserUncheckedCreateWithoutAccountsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAccountsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutAccountsInput,
    Prisma.UserUncheckedCreateWithoutAccountsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutAccountsInput;
  upsert?: Prisma.UserUpsertWithoutAccountsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutAccountsInput,
      Prisma.UserUpdateWithoutAccountsInput
    >,
    Prisma.UserUncheckedUpdateWithoutAccountsInput
  >;
};

export type UserCreateNestedOneWithoutSessionsInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSessionsInput,
    Prisma.UserUncheckedCreateWithoutSessionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSessionsInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSessionsInput,
    Prisma.UserUncheckedCreateWithoutSessionsInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSessionsInput;
  upsert?: Prisma.UserUpsertWithoutSessionsInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutSessionsInput,
      Prisma.UserUpdateWithoutSessionsInput
    >,
    Prisma.UserUncheckedUpdateWithoutSessionsInput
  >;
};

export type UserCreateNestedOneWithoutMembershipInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutMembershipInput,
    Prisma.UserUncheckedCreateWithoutMembershipInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMembershipInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserCreateNestedOneWithoutSentInvitesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSentInvitesInput,
    Prisma.UserUncheckedCreateWithoutSentInvitesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSentInvitesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneWithoutMembershipNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutMembershipInput,
    Prisma.UserUncheckedCreateWithoutMembershipInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutMembershipInput;
  upsert?: Prisma.UserUpsertWithoutMembershipInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutMembershipInput,
      Prisma.UserUpdateWithoutMembershipInput
    >,
    Prisma.UserUncheckedUpdateWithoutMembershipInput
  >;
};

export type UserUpdateOneWithoutSentInvitesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutSentInvitesInput,
    Prisma.UserUncheckedCreateWithoutSentInvitesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutSentInvitesInput;
  upsert?: Prisma.UserUpsertWithoutSentInvitesInput;
  disconnect?: Prisma.UserWhereInput | boolean;
  delete?: Prisma.UserWhereInput | boolean;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutSentInvitesInput,
      Prisma.UserUpdateWithoutSentInvitesInput
    >,
    Prisma.UserUncheckedUpdateWithoutSentInvitesInput
  >;
};

export type UserCreateNestedOneWithoutInvitesInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutInvitesInput,
    Prisma.UserUncheckedCreateWithoutInvitesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutInvitesInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutInvitesNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutInvitesInput,
    Prisma.UserUncheckedCreateWithoutInvitesInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutInvitesInput;
  upsert?: Prisma.UserUpsertWithoutInvitesInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutInvitesInput,
      Prisma.UserUpdateWithoutInvitesInput
    >,
    Prisma.UserUncheckedUpdateWithoutInvitesInput
  >;
};

export type UserCreateNestedOneWithoutProjectAccessInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutProjectAccessInput,
    Prisma.UserUncheckedCreateWithoutProjectAccessInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProjectAccessInput;
  connect?: Prisma.UserWhereUniqueInput;
};

export type UserUpdateOneRequiredWithoutProjectAccessNestedInput = {
  create?: Prisma.XOR<
    Prisma.UserCreateWithoutProjectAccessInput,
    Prisma.UserUncheckedCreateWithoutProjectAccessInput
  >;
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutProjectAccessInput;
  upsert?: Prisma.UserUpsertWithoutProjectAccessInput;
  connect?: Prisma.UserWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.UserUpdateToOneWithWhereWithoutProjectAccessInput,
      Prisma.UserUpdateWithoutProjectAccessInput
    >,
    Prisma.UserUncheckedUpdateWithoutProjectAccessInput
  >;
};

export type UserCreateWithoutCreatedOrganizationsInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  subscriptions?: Prisma.OrganizationCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteCreateNestedManyWithoutCreatedByInput;
};

export type UserUncheckedCreateWithoutCreatedOrganizationsInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  subscriptions?: Prisma.OrganizationUncheckedCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberUncheckedCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberUncheckedCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteUncheckedCreateNestedManyWithoutCreatedByInput;
};

export type UserCreateOrConnectWithoutCreatedOrganizationsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedOrganizationsInput,
    Prisma.UserUncheckedCreateWithoutCreatedOrganizationsInput
  >;
};

export type UserCreateWithoutSubscriptionsInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationCreateNestedManyWithoutCreatedByInput;
  membership?: Prisma.MemberCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteCreateNestedManyWithoutCreatedByInput;
};

export type UserUncheckedCreateWithoutSubscriptionsInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutCreatedByInput;
  membership?: Prisma.MemberUncheckedCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberUncheckedCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteUncheckedCreateNestedManyWithoutCreatedByInput;
};

export type UserCreateOrConnectWithoutSubscriptionsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutSubscriptionsInput
  >;
};

export type UserUpsertWithoutCreatedOrganizationsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutCreatedOrganizationsInput,
    Prisma.UserUncheckedUpdateWithoutCreatedOrganizationsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutCreatedOrganizationsInput,
    Prisma.UserUncheckedCreateWithoutCreatedOrganizationsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutCreatedOrganizationsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutCreatedOrganizationsInput,
    Prisma.UserUncheckedUpdateWithoutCreatedOrganizationsInput
  >;
};

export type UserUpdateWithoutCreatedOrganizationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  subscriptions?: Prisma.OrganizationUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUpdateManyWithoutCreatedByNestedInput;
};

export type UserUncheckedUpdateWithoutCreatedOrganizationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  subscriptions?: Prisma.OrganizationUncheckedUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUncheckedUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUncheckedUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUncheckedUpdateManyWithoutCreatedByNestedInput;
};

export type UserUpsertWithoutSubscriptionsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutSubscriptionsInput,
    Prisma.UserUncheckedUpdateWithoutSubscriptionsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSubscriptionsInput,
    Prisma.UserUncheckedCreateWithoutSubscriptionsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutSubscriptionsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutSubscriptionsInput,
    Prisma.UserUncheckedUpdateWithoutSubscriptionsInput
  >;
};

export type UserUpdateWithoutSubscriptionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUpdateManyWithoutCreatedByNestedInput;
  membership?: Prisma.MemberUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUpdateManyWithoutCreatedByNestedInput;
};

export type UserUncheckedUpdateWithoutSubscriptionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutCreatedByNestedInput;
  membership?: Prisma.MemberUncheckedUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUncheckedUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUncheckedUpdateManyWithoutCreatedByNestedInput;
};

export type UserCreateWithoutAccountsInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteCreateNestedManyWithoutCreatedByInput;
};

export type UserUncheckedCreateWithoutAccountsInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationUncheckedCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberUncheckedCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberUncheckedCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteUncheckedCreateNestedManyWithoutCreatedByInput;
};

export type UserCreateOrConnectWithoutAccountsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccountsInput,
    Prisma.UserUncheckedCreateWithoutAccountsInput
  >;
};

export type UserUpsertWithoutAccountsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutAccountsInput,
    Prisma.UserUncheckedUpdateWithoutAccountsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutAccountsInput,
    Prisma.UserUncheckedCreateWithoutAccountsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutAccountsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutAccountsInput,
    Prisma.UserUncheckedUpdateWithoutAccountsInput
  >;
};

export type UserUpdateWithoutAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUpdateManyWithoutCreatedByNestedInput;
};

export type UserUncheckedUpdateWithoutAccountsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUncheckedUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUncheckedUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUncheckedUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUncheckedUpdateManyWithoutCreatedByNestedInput;
};

export type UserCreateWithoutSessionsInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteCreateNestedManyWithoutCreatedByInput;
};

export type UserUncheckedCreateWithoutSessionsInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationUncheckedCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberUncheckedCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberUncheckedCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteUncheckedCreateNestedManyWithoutCreatedByInput;
};

export type UserCreateOrConnectWithoutSessionsInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSessionsInput,
    Prisma.UserUncheckedCreateWithoutSessionsInput
  >;
};

export type UserUpsertWithoutSessionsInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutSessionsInput,
    Prisma.UserUncheckedUpdateWithoutSessionsInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSessionsInput,
    Prisma.UserUncheckedCreateWithoutSessionsInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutSessionsInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutSessionsInput,
    Prisma.UserUncheckedUpdateWithoutSessionsInput
  >;
};

export type UserUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUpdateManyWithoutCreatedByNestedInput;
};

export type UserUncheckedUpdateWithoutSessionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUncheckedUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUncheckedUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUncheckedUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUncheckedUpdateManyWithoutCreatedByNestedInput;
};

export type UserCreateWithoutMembershipInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationCreateNestedManyWithoutSubscriptionCreatedByInput;
  sentInvites?: Prisma.MemberCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteCreateNestedManyWithoutCreatedByInput;
};

export type UserUncheckedCreateWithoutMembershipInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationUncheckedCreateNestedManyWithoutSubscriptionCreatedByInput;
  sentInvites?: Prisma.MemberUncheckedCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteUncheckedCreateNestedManyWithoutCreatedByInput;
};

export type UserCreateOrConnectWithoutMembershipInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutMembershipInput,
    Prisma.UserUncheckedCreateWithoutMembershipInput
  >;
};

export type UserCreateWithoutSentInvitesInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberCreateNestedManyWithoutUserInput;
  ProjectAccess?: Prisma.ProjectAccessCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteCreateNestedManyWithoutCreatedByInput;
};

export type UserUncheckedCreateWithoutSentInvitesInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationUncheckedCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberUncheckedCreateNestedManyWithoutUserInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteUncheckedCreateNestedManyWithoutCreatedByInput;
};

export type UserCreateOrConnectWithoutSentInvitesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSentInvitesInput,
    Prisma.UserUncheckedCreateWithoutSentInvitesInput
  >;
};

export type UserUpsertWithoutMembershipInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutMembershipInput,
    Prisma.UserUncheckedUpdateWithoutMembershipInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutMembershipInput,
    Prisma.UserUncheckedCreateWithoutMembershipInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutMembershipInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutMembershipInput,
    Prisma.UserUncheckedUpdateWithoutMembershipInput
  >;
};

export type UserUpdateWithoutMembershipInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUpdateManyWithoutSubscriptionCreatedByNestedInput;
  sentInvites?: Prisma.MemberUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUpdateManyWithoutCreatedByNestedInput;
};

export type UserUncheckedUpdateWithoutMembershipInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUncheckedUpdateManyWithoutSubscriptionCreatedByNestedInput;
  sentInvites?: Prisma.MemberUncheckedUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUncheckedUpdateManyWithoutCreatedByNestedInput;
};

export type UserUpsertWithoutSentInvitesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutSentInvitesInput,
    Prisma.UserUncheckedUpdateWithoutSentInvitesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutSentInvitesInput,
    Prisma.UserUncheckedCreateWithoutSentInvitesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutSentInvitesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutSentInvitesInput,
    Prisma.UserUncheckedUpdateWithoutSentInvitesInput
  >;
};

export type UserUpdateWithoutSentInvitesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUpdateManyWithoutUserNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUpdateManyWithoutCreatedByNestedInput;
};

export type UserUncheckedUpdateWithoutSentInvitesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUncheckedUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUncheckedUpdateManyWithoutUserNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUncheckedUpdateManyWithoutCreatedByNestedInput;
};

export type UserCreateWithoutInvitesInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
};

export type UserUncheckedCreateWithoutInvitesInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationUncheckedCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberUncheckedCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberUncheckedCreateNestedManyWithoutInvitedByInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedCreateNestedManyWithoutUserInput;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
};

export type UserCreateOrConnectWithoutInvitesInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutInvitesInput,
    Prisma.UserUncheckedCreateWithoutInvitesInput
  >;
};

export type UserUpsertWithoutInvitesInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutInvitesInput,
    Prisma.UserUncheckedUpdateWithoutInvitesInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutInvitesInput,
    Prisma.UserUncheckedCreateWithoutInvitesInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutInvitesInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutInvitesInput,
    Prisma.UserUncheckedUpdateWithoutInvitesInput
  >;
};

export type UserUpdateWithoutInvitesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
};

export type UserUncheckedUpdateWithoutInvitesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUncheckedUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUncheckedUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUncheckedUpdateManyWithoutInvitedByNestedInput;
  ProjectAccess?: Prisma.ProjectAccessUncheckedUpdateManyWithoutUserNestedInput;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
};

export type UserCreateWithoutProjectAccessInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberCreateNestedManyWithoutInvitedByInput;
  sessions?: Prisma.SessionCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteCreateNestedManyWithoutCreatedByInput;
};

export type UserUncheckedCreateWithoutProjectAccessInput = {
  id?: string;
  email: string;
  firstName?: string | null;
  lastName?: string | null;
  createdAt?: Date | string;
  updatedAt?: Date | string;
  deletedAt?: Date | string | null;
  createdOrganizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutCreatedByInput;
  subscriptions?: Prisma.OrganizationUncheckedCreateNestedManyWithoutSubscriptionCreatedByInput;
  membership?: Prisma.MemberUncheckedCreateNestedManyWithoutUserInput;
  sentInvites?: Prisma.MemberUncheckedCreateNestedManyWithoutInvitedByInput;
  sessions?: Prisma.SessionUncheckedCreateNestedManyWithoutUserInput;
  accounts?: Prisma.AccountUncheckedCreateNestedManyWithoutUserInput;
  invites?: Prisma.InviteUncheckedCreateNestedManyWithoutCreatedByInput;
};

export type UserCreateOrConnectWithoutProjectAccessInput = {
  where: Prisma.UserWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutProjectAccessInput,
    Prisma.UserUncheckedCreateWithoutProjectAccessInput
  >;
};

export type UserUpsertWithoutProjectAccessInput = {
  update: Prisma.XOR<
    Prisma.UserUpdateWithoutProjectAccessInput,
    Prisma.UserUncheckedUpdateWithoutProjectAccessInput
  >;
  create: Prisma.XOR<
    Prisma.UserCreateWithoutProjectAccessInput,
    Prisma.UserUncheckedCreateWithoutProjectAccessInput
  >;
  where?: Prisma.UserWhereInput;
};

export type UserUpdateToOneWithWhereWithoutProjectAccessInput = {
  where?: Prisma.UserWhereInput;
  data: Prisma.XOR<
    Prisma.UserUpdateWithoutProjectAccessInput,
    Prisma.UserUncheckedUpdateWithoutProjectAccessInput
  >;
};

export type UserUpdateWithoutProjectAccessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUpdateManyWithoutInvitedByNestedInput;
  sessions?: Prisma.SessionUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUpdateManyWithoutCreatedByNestedInput;
};

export type UserUncheckedUpdateWithoutProjectAccessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  firstName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  lastName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
  deletedAt?:
    | Prisma.NullableDateTimeFieldUpdateOperationsInput
    | Date
    | string
    | null;
  createdOrganizations?: Prisma.OrganizationUncheckedUpdateManyWithoutCreatedByNestedInput;
  subscriptions?: Prisma.OrganizationUncheckedUpdateManyWithoutSubscriptionCreatedByNestedInput;
  membership?: Prisma.MemberUncheckedUpdateManyWithoutUserNestedInput;
  sentInvites?: Prisma.MemberUncheckedUpdateManyWithoutInvitedByNestedInput;
  sessions?: Prisma.SessionUncheckedUpdateManyWithoutUserNestedInput;
  accounts?: Prisma.AccountUncheckedUpdateManyWithoutUserNestedInput;
  invites?: Prisma.InviteUncheckedUpdateManyWithoutCreatedByNestedInput;
};

/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  createdOrganizations: number;
  subscriptions: number;
  membership: number;
  sentInvites: number;
  ProjectAccess: number;
  sessions: number;
  accounts: number;
  invites: number;
};

export type UserCountOutputTypeSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  createdOrganizations?:
    | boolean
    | UserCountOutputTypeCountCreatedOrganizationsArgs;
  subscriptions?: boolean | UserCountOutputTypeCountSubscriptionsArgs;
  membership?: boolean | UserCountOutputTypeCountMembershipArgs;
  sentInvites?: boolean | UserCountOutputTypeCountSentInvitesArgs;
  ProjectAccess?: boolean | UserCountOutputTypeCountProjectAccessArgs;
  sessions?: boolean | UserCountOutputTypeCountSessionsArgs;
  accounts?: boolean | UserCountOutputTypeCountAccountsArgs;
  invites?: boolean | UserCountOutputTypeCountInvitesArgs;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountCreatedOrganizationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.OrganizationWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSubscriptionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.OrganizationWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountMembershipArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MemberWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSentInvitesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.MemberWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountProjectAccessArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.ProjectAccessWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountSessionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.SessionWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountAccountsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.AccountWhereInput;
};

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountInvitesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.InviteWhereInput;
};

export type UserSelect<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    email?: boolean;
    firstName?: boolean;
    lastName?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    deletedAt?: boolean;
    createdOrganizations?:
      | boolean
      | Prisma.User$createdOrganizationsArgs<ExtArgs>;
    subscriptions?: boolean | Prisma.User$subscriptionsArgs<ExtArgs>;
    membership?: boolean | Prisma.User$membershipArgs<ExtArgs>;
    sentInvites?: boolean | Prisma.User$sentInvitesArgs<ExtArgs>;
    ProjectAccess?: boolean | Prisma.User$ProjectAccessArgs<ExtArgs>;
    sessions?: boolean | Prisma.User$sessionsArgs<ExtArgs>;
    accounts?: boolean | Prisma.User$accountsArgs<ExtArgs>;
    invites?: boolean | Prisma.User$invitesArgs<ExtArgs>;
    _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>;
  },
  ExtArgs['result']['user']
>;

export type UserSelectCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    email?: boolean;
    firstName?: boolean;
    lastName?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    deletedAt?: boolean;
  },
  ExtArgs['result']['user']
>;

export type UserSelectUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    email?: boolean;
    firstName?: boolean;
    lastName?: boolean;
    createdAt?: boolean;
    updatedAt?: boolean;
    deletedAt?: boolean;
  },
  ExtArgs['result']['user']
>;

export type UserSelectScalar = {
  id?: boolean;
  email?: boolean;
  firstName?: boolean;
  lastName?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
  deletedAt?: boolean;
};

export type UserOmit<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  | 'id'
  | 'email'
  | 'firstName'
  | 'lastName'
  | 'createdAt'
  | 'updatedAt'
  | 'deletedAt',
  ExtArgs['result']['user']
>;
export type UserInclude<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  createdOrganizations?:
    | boolean
    | Prisma.User$createdOrganizationsArgs<ExtArgs>;
  subscriptions?: boolean | Prisma.User$subscriptionsArgs<ExtArgs>;
  membership?: boolean | Prisma.User$membershipArgs<ExtArgs>;
  sentInvites?: boolean | Prisma.User$sentInvitesArgs<ExtArgs>;
  ProjectAccess?: boolean | Prisma.User$ProjectAccessArgs<ExtArgs>;
  sessions?: boolean | Prisma.User$sessionsArgs<ExtArgs>;
  accounts?: boolean | Prisma.User$accountsArgs<ExtArgs>;
  invites?: boolean | Prisma.User$invitesArgs<ExtArgs>;
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>;
};
export type UserIncludeCreateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};
export type UserIncludeUpdateManyAndReturn<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {};

export type $UserPayload<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: 'User';
  objects: {
    createdOrganizations: Prisma.$OrganizationPayload<ExtArgs>[];
    subscriptions: Prisma.$OrganizationPayload<ExtArgs>[];
    membership: Prisma.$MemberPayload<ExtArgs>[];
    sentInvites: Prisma.$MemberPayload<ExtArgs>[];
    ProjectAccess: Prisma.$ProjectAccessPayload<ExtArgs>[];
    sessions: Prisma.$SessionPayload<ExtArgs>[];
    accounts: Prisma.$AccountPayload<ExtArgs>[];
    invites: Prisma.$InvitePayload<ExtArgs>[];
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      email: string;
      firstName: string | null;
      lastName: string | null;
      createdAt: Date;
      updatedAt: Date;
      deletedAt: Date | null;
    },
    ExtArgs['result']['user']
  >;
  composites: {};
};

export type UserGetPayload<
  S extends boolean | null | undefined | UserDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>;

export type UserCountArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
  select?: UserCountAggregateInputType | true;
};

export interface UserDelegate<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>['model']['User'];
    meta: { name: 'User' };
  };
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(
    args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'findUnique',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'findUniqueOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(
    args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'findFirst',
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'findFirstOrThrow',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   *
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   *
   */
  findMany<T extends UserFindManyArgs>(
    args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'findMany',
      GlobalOmitOptions
    >
  >;

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   *
   */
  create<T extends UserCreateArgs>(
    args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'create',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends UserCreateManyArgs>(
    args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'createManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   *
   */
  delete<T extends UserDeleteArgs>(
    args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'delete',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends UserUpdateArgs>(
    args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'update',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends UserDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends UserUpdateManyArgs>(
    args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'updateManyAndReturn',
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(
    args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>,
  ): Prisma.Prisma__UserClient<
    runtime.Types.Result.GetResult<
      Prisma.$UserPayload<ExtArgs>,
      T,
      'upsert',
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
   **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends UserAggregateArgs>(
    args: Prisma.Subset<T, UserAggregateArgs>,
  ): Prisma.PrismaPromise<GetUserAggregateType<T>>;

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [
                    Error,
                    'Field ',
                    P,
                    ` in "having" needs to be provided in "by"`,
                  ];
          }[HavingFields]
        : 'take' extends Prisma.Keys<T>
          ? 'orderBy' extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : 'skip' extends Prisma.Keys<T>
            ? 'orderBy' extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> &
      InputErrors,
  ): {} extends InputErrors
    ? GetUserGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<
  T,
  Null = never,
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: 'PrismaPromise';
  createdOrganizations<
    T extends Prisma.User$createdOrganizationsArgs<ExtArgs> = {},
  >(
    args?: Prisma.Subset<T, Prisma.User$createdOrganizationsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  subscriptions<T extends Prisma.User$subscriptionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$subscriptionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$OrganizationPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  membership<T extends Prisma.User$membershipArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$membershipArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MemberPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  sentInvites<T extends Prisma.User$sentInvitesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$sentInvitesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$MemberPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  ProjectAccess<T extends Prisma.User$ProjectAccessArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$ProjectAccessArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$ProjectAccessPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  sessions<T extends Prisma.User$sessionsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$sessionsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$SessionPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  accounts<T extends Prisma.User$accountsArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$accountsArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$AccountPayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  invites<T extends Prisma.User$invitesArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.User$invitesArgs<ExtArgs>>,
  ): Prisma.PrismaPromise<
    | runtime.Types.Result.GetResult<
        Prisma.$InvitePayload<ExtArgs>,
        T,
        'findMany',
        GlobalOmitOptions
      >
    | Null
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?:
      | ((value: T) => TResult1 | PromiseLike<TResult1>)
      | undefined
      | null,
    onrejected?:
      | ((reason: any) => TResult2 | PromiseLike<TResult2>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?:
      | ((reason: any) => TResult | PromiseLike<TResult>)
      | undefined
      | null,
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(
    onfinally?: (() => void) | undefined | null,
  ): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<'User', 'String'>;
  readonly email: Prisma.FieldRef<'User', 'String'>;
  readonly firstName: Prisma.FieldRef<'User', 'String'>;
  readonly lastName: Prisma.FieldRef<'User', 'String'>;
  readonly createdAt: Prisma.FieldRef<'User', 'DateTime'>;
  readonly updatedAt: Prisma.FieldRef<'User', 'DateTime'>;
  readonly deletedAt: Prisma.FieldRef<'User', 'DateTime'>;
}

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User findFirst
 */
export type UserFindFirstArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * User findMany
 */
export type UserFindManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of Users to fetch.
   */
  orderBy?:
    | Prisma.UserOrderByWithRelationInput
    | Prisma.UserOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` Users.
   */
  skip?: number;
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[];
};

/**
 * User create
 */
export type UserCreateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>;
};

/**
 * User createMany
 */
export type UserCreateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * User update
 */
export type UserUpdateArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>;
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User updateMany
 */
export type UserUpdateManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<
    Prisma.UserUpdateManyMutationInput,
    Prisma.UserUncheckedUpdateManyInput
  >;
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput;
  /**
   * Limit how many Users to update.
   */
  limit?: number;
};

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<
    Prisma.UserUpdateManyMutationInput,
    Prisma.UserUncheckedUpdateManyInput
  >;
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput;
  /**
   * Limit how many Users to update.
   */
  limit?: number;
};

/**
 * User upsert
 */
export type UserUpsertArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput;
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>;
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>;
};

/**
 * User delete
 */
export type UserDeleteArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput;
};

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput;
  /**
   * Limit how many Users to delete.
   */
  limit?: number;
};

/**
 * User.createdOrganizations
 */
export type User$createdOrganizationsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null;
  where?: Prisma.OrganizationWhereInput;
  orderBy?:
    | Prisma.OrganizationOrderByWithRelationInput
    | Prisma.OrganizationOrderByWithRelationInput[];
  cursor?: Prisma.OrganizationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.OrganizationScalarFieldEnum
    | Prisma.OrganizationScalarFieldEnum[];
};

/**
 * User.subscriptions
 */
export type User$subscriptionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null;
  where?: Prisma.OrganizationWhereInput;
  orderBy?:
    | Prisma.OrganizationOrderByWithRelationInput
    | Prisma.OrganizationOrderByWithRelationInput[];
  cursor?: Prisma.OrganizationWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.OrganizationScalarFieldEnum
    | Prisma.OrganizationScalarFieldEnum[];
};

/**
 * User.membership
 */
export type User$membershipArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Member
   */
  select?: Prisma.MemberSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Member
   */
  omit?: Prisma.MemberOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MemberInclude<ExtArgs> | null;
  where?: Prisma.MemberWhereInput;
  orderBy?:
    | Prisma.MemberOrderByWithRelationInput
    | Prisma.MemberOrderByWithRelationInput[];
  cursor?: Prisma.MemberWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.MemberScalarFieldEnum | Prisma.MemberScalarFieldEnum[];
};

/**
 * User.sentInvites
 */
export type User$sentInvitesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Member
   */
  select?: Prisma.MemberSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Member
   */
  omit?: Prisma.MemberOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MemberInclude<ExtArgs> | null;
  where?: Prisma.MemberWhereInput;
  orderBy?:
    | Prisma.MemberOrderByWithRelationInput
    | Prisma.MemberOrderByWithRelationInput[];
  cursor?: Prisma.MemberWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.MemberScalarFieldEnum | Prisma.MemberScalarFieldEnum[];
};

/**
 * User.ProjectAccess
 */
export type User$ProjectAccessArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the ProjectAccess
   */
  select?: Prisma.ProjectAccessSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the ProjectAccess
   */
  omit?: Prisma.ProjectAccessOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProjectAccessInclude<ExtArgs> | null;
  where?: Prisma.ProjectAccessWhereInput;
  orderBy?:
    | Prisma.ProjectAccessOrderByWithRelationInput
    | Prisma.ProjectAccessOrderByWithRelationInput[];
  cursor?: Prisma.ProjectAccessWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?:
    | Prisma.ProjectAccessScalarFieldEnum
    | Prisma.ProjectAccessScalarFieldEnum[];
};

/**
 * User.sessions
 */
export type User$sessionsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Session
   */
  select?: Prisma.SessionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Session
   */
  omit?: Prisma.SessionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.SessionInclude<ExtArgs> | null;
  where?: Prisma.SessionWhereInput;
  orderBy?:
    | Prisma.SessionOrderByWithRelationInput
    | Prisma.SessionOrderByWithRelationInput[];
  cursor?: Prisma.SessionWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.SessionScalarFieldEnum | Prisma.SessionScalarFieldEnum[];
};

/**
 * User.accounts
 */
export type User$accountsArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Account
   */
  select?: Prisma.AccountSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Account
   */
  omit?: Prisma.AccountOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountInclude<ExtArgs> | null;
  where?: Prisma.AccountWhereInput;
  orderBy?:
    | Prisma.AccountOrderByWithRelationInput
    | Prisma.AccountOrderByWithRelationInput[];
  cursor?: Prisma.AccountWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.AccountScalarFieldEnum | Prisma.AccountScalarFieldEnum[];
};

/**
 * User.invites
 */
export type User$invitesArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the Invite
   */
  select?: Prisma.InviteSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the Invite
   */
  omit?: Prisma.InviteOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.InviteInclude<ExtArgs> | null;
  where?: Prisma.InviteWhereInput;
  orderBy?:
    | Prisma.InviteOrderByWithRelationInput
    | Prisma.InviteOrderByWithRelationInput[];
  cursor?: Prisma.InviteWhereUniqueInput;
  take?: number;
  skip?: number;
  distinct?: Prisma.InviteScalarFieldEnum | Prisma.InviteScalarFieldEnum[];
};

/**
 * User without action
 */
export type UserDefaultArgs<
  ExtArgs extends
    runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null;
};
