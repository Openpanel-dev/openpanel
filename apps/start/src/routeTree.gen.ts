/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AppRouteImport } from './routes/_app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthOnboardingRouteImport } from './routes/_auth.onboarding'
import { Route as AuthLoginRouteImport } from './routes/_auth.login'
import { Route as AppOrganizationIdRouteImport } from './routes/_app.$organizationId'
import { Route as AuthOnboardingIndexRouteImport } from './routes/_auth.onboarding.index'
import { Route as AuthOnboardingStep1RouteImport } from './routes/_auth.onboarding.step1'
import { Route as AppOrganizationIdSettingsRouteImport } from './routes/_app.$organizationId_.settings'
import { Route as AppOrganizationIdBillingRouteImport } from './routes/_app.$organizationId_.billing'
import { Route as AppOrganizationIdProjectIdRouteImport } from './routes/_app.$organizationId_.$projectId'
import { Route as AppOrganizationIdMembersTabsRouteImport } from './routes/_app.$organizationId_.members._tabs'
import { Route as AppOrganizationIdIntegrationsTabsRouteImport } from './routes/_app.$organizationId_.integrations._tabs'
import { Route as AppOrganizationIdProjectIdReferencesRouteImport } from './routes/_app.$organizationId_.$projectId_.references'
import { Route as AppOrganizationIdProjectIdRealtimeRouteImport } from './routes/_app.$organizationId_.$projectId_.realtime'
import { Route as AppOrganizationIdProjectIdPagesRouteImport } from './routes/_app.$organizationId_.$projectId_.pages'
import { Route as AppOrganizationIdProjectIdDashboardsRouteImport } from './routes/_app.$organizationId_.$projectId_.dashboards'
import { Route as AppOrganizationIdMembersTabsIndexRouteImport } from './routes/_app.$organizationId_.members._tabs.index'
import { Route as AppOrganizationIdIntegrationsTabsIndexRouteImport } from './routes/_app.$organizationId_.integrations._tabs.index'
import { Route as AppOrganizationIdMembersTabsInvitationsRouteImport } from './routes/_app.$organizationId_.members._tabs.invitations'
import { Route as AppOrganizationIdIntegrationsTabsAvailableRouteImport } from './routes/_app.$organizationId_.integrations._tabs.available'
import { Route as AppOrganizationIdProjectIdSettingsTabsRouteImport } from './routes/_app.$organizationId_.$projectId_.settings._tabs'
import { Route as AppOrganizationIdProjectIdProfilesTabsRouteImport } from './routes/_app.$organizationId_.$projectId_.profiles._tabs'
import { Route as AppOrganizationIdProjectIdEventsTabsRouteImport } from './routes/_app.$organizationId_.$projectId_.events._tabs'
import { Route as AppOrganizationIdProjectIdDashboardsDashboardIdRouteImport } from './routes/_app.$organizationId_.$projectId_.dashboards_.$dashboardId'
import { Route as AppOrganizationIdProjectIdSettingsTabsIndexRouteImport } from './routes/_app.$organizationId_.$projectId_.settings._tabs.index'
import { Route as AppOrganizationIdProjectIdProfilesTabsIndexRouteImport } from './routes/_app.$organizationId_.$projectId_.profiles._tabs.index'
import { Route as AppOrganizationIdProjectIdEventsTabsIndexRouteImport } from './routes/_app.$organizationId_.$projectId_.events._tabs.index'
import { Route as AppOrganizationIdProjectIdSettingsTabsEventsRouteImport } from './routes/_app.$organizationId_.$projectId_.settings._tabs.events'
import { Route as AppOrganizationIdProjectIdSettingsTabsDetailsRouteImport } from './routes/_app.$organizationId_.$projectId_.settings._tabs.details'
import { Route as AppOrganizationIdProjectIdSettingsTabsClientsRouteImport } from './routes/_app.$organizationId_.$projectId_.settings._tabs.clients'
import { Route as AppOrganizationIdProjectIdProfilesTabsPowerUsersRouteImport } from './routes/_app.$organizationId_.$projectId_.profiles._tabs.power-users'
import { Route as AppOrganizationIdProjectIdProfilesTabsIdentifiedRouteImport } from './routes/_app.$organizationId_.$projectId_.profiles._tabs.identified'
import { Route as AppOrganizationIdProjectIdProfilesTabsAnonymousRouteImport } from './routes/_app.$organizationId_.$projectId_.profiles._tabs.anonymous'
import { Route as AppOrganizationIdProjectIdEventsTabsStatsRouteImport } from './routes/_app.$organizationId_.$projectId_.events._tabs.stats'
import { Route as AppOrganizationIdProjectIdEventsTabsEventsRouteImport } from './routes/_app.$organizationId_.$projectId_.events._tabs.events'
import { Route as AppOrganizationIdProjectIdEventsTabsConversionsRouteImport } from './routes/_app.$organizationId_.$projectId_.events._tabs.conversions'
import { Route as AppOrganizationIdProjectIdDashboardsDashboardIdReportsRouteImport } from './routes/_app.$organizationId_.$projectId_.dashboards_.$dashboardId_.reports'
import { Route as AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRouteImport } from './routes/_app.$organizationId_.$projectId_.dashboards_.$dashboardId_.reports_.$reportId'

const AppOrganizationIdMembersRouteImport = createFileRoute(
  '/_app/$organizationId_/members',
)()
const AppOrganizationIdIntegrationsRouteImport = createFileRoute(
  '/_app/$organizationId_/integrations',
)()
const AppOrganizationIdProjectIdSettingsRouteImport = createFileRoute(
  '/_app/$organizationId_/$projectId_/settings',
)()
const AppOrganizationIdProjectIdProfilesRouteImport = createFileRoute(
  '/_app/$organizationId_/$projectId_/profiles',
)()
const AppOrganizationIdProjectIdEventsRouteImport = createFileRoute(
  '/_app/$organizationId_/$projectId_/events',
)()

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthOnboardingRoute = AuthOnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AppOrganizationIdRoute = AppOrganizationIdRouteImport.update({
  id: '/$organizationId',
  path: '/$organizationId',
  getParentRoute: () => AppRoute,
} as any)
const AppOrganizationIdMembersRoute =
  AppOrganizationIdMembersRouteImport.update({
    id: '/$organizationId_/members',
    path: '/$organizationId/members',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdIntegrationsRoute =
  AppOrganizationIdIntegrationsRouteImport.update({
    id: '/$organizationId_/integrations',
    path: '/$organizationId/integrations',
    getParentRoute: () => AppRoute,
  } as any)
const AuthOnboardingIndexRoute = AuthOnboardingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthOnboardingRoute,
} as any)
const AuthOnboardingStep1Route = AuthOnboardingStep1RouteImport.update({
  id: '/step1',
  path: '/step1',
  getParentRoute: () => AuthOnboardingRoute,
} as any)
const AppOrganizationIdSettingsRoute =
  AppOrganizationIdSettingsRouteImport.update({
    id: '/$organizationId_/settings',
    path: '/$organizationId/settings',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdBillingRoute =
  AppOrganizationIdBillingRouteImport.update({
    id: '/$organizationId_/billing',
    path: '/$organizationId/billing',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdProjectIdRoute =
  AppOrganizationIdProjectIdRouteImport.update({
    id: '/$organizationId_/$projectId',
    path: '/$organizationId/$projectId',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdProjectIdSettingsRoute =
  AppOrganizationIdProjectIdSettingsRouteImport.update({
    id: '/$organizationId_/$projectId_/settings',
    path: '/$organizationId/$projectId/settings',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdProjectIdProfilesRoute =
  AppOrganizationIdProjectIdProfilesRouteImport.update({
    id: '/$organizationId_/$projectId_/profiles',
    path: '/$organizationId/$projectId/profiles',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdProjectIdEventsRoute =
  AppOrganizationIdProjectIdEventsRouteImport.update({
    id: '/$organizationId_/$projectId_/events',
    path: '/$organizationId/$projectId/events',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdMembersTabsRoute =
  AppOrganizationIdMembersTabsRouteImport.update({
    id: '/_tabs',
    getParentRoute: () => AppOrganizationIdMembersRoute,
  } as any)
const AppOrganizationIdIntegrationsTabsRoute =
  AppOrganizationIdIntegrationsTabsRouteImport.update({
    id: '/_tabs',
    getParentRoute: () => AppOrganizationIdIntegrationsRoute,
  } as any)
const AppOrganizationIdProjectIdReferencesRoute =
  AppOrganizationIdProjectIdReferencesRouteImport.update({
    id: '/$organizationId_/$projectId_/references',
    path: '/$organizationId/$projectId/references',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdProjectIdRealtimeRoute =
  AppOrganizationIdProjectIdRealtimeRouteImport.update({
    id: '/$organizationId_/$projectId_/realtime',
    path: '/$organizationId/$projectId/realtime',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdProjectIdPagesRoute =
  AppOrganizationIdProjectIdPagesRouteImport.update({
    id: '/$organizationId_/$projectId_/pages',
    path: '/$organizationId/$projectId/pages',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdProjectIdDashboardsRoute =
  AppOrganizationIdProjectIdDashboardsRouteImport.update({
    id: '/$organizationId_/$projectId_/dashboards',
    path: '/$organizationId/$projectId/dashboards',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdMembersTabsIndexRoute =
  AppOrganizationIdMembersTabsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppOrganizationIdMembersTabsRoute,
  } as any)
const AppOrganizationIdIntegrationsTabsIndexRoute =
  AppOrganizationIdIntegrationsTabsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppOrganizationIdIntegrationsTabsRoute,
  } as any)
const AppOrganizationIdMembersTabsInvitationsRoute =
  AppOrganizationIdMembersTabsInvitationsRouteImport.update({
    id: '/invitations',
    path: '/invitations',
    getParentRoute: () => AppOrganizationIdMembersTabsRoute,
  } as any)
const AppOrganizationIdIntegrationsTabsAvailableRoute =
  AppOrganizationIdIntegrationsTabsAvailableRouteImport.update({
    id: '/available',
    path: '/available',
    getParentRoute: () => AppOrganizationIdIntegrationsTabsRoute,
  } as any)
const AppOrganizationIdProjectIdSettingsTabsRoute =
  AppOrganizationIdProjectIdSettingsTabsRouteImport.update({
    id: '/_tabs',
    getParentRoute: () => AppOrganizationIdProjectIdSettingsRoute,
  } as any)
const AppOrganizationIdProjectIdProfilesTabsRoute =
  AppOrganizationIdProjectIdProfilesTabsRouteImport.update({
    id: '/_tabs',
    getParentRoute: () => AppOrganizationIdProjectIdProfilesRoute,
  } as any)
const AppOrganizationIdProjectIdEventsTabsRoute =
  AppOrganizationIdProjectIdEventsTabsRouteImport.update({
    id: '/_tabs',
    getParentRoute: () => AppOrganizationIdProjectIdEventsRoute,
  } as any)
const AppOrganizationIdProjectIdDashboardsDashboardIdRoute =
  AppOrganizationIdProjectIdDashboardsDashboardIdRouteImport.update({
    id: '/$organizationId_/$projectId_/dashboards_/$dashboardId',
    path: '/$organizationId/$projectId/dashboards/$dashboardId',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdProjectIdSettingsTabsIndexRoute =
  AppOrganizationIdProjectIdSettingsTabsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppOrganizationIdProjectIdSettingsTabsRoute,
  } as any)
const AppOrganizationIdProjectIdProfilesTabsIndexRoute =
  AppOrganizationIdProjectIdProfilesTabsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppOrganizationIdProjectIdProfilesTabsRoute,
  } as any)
const AppOrganizationIdProjectIdEventsTabsIndexRoute =
  AppOrganizationIdProjectIdEventsTabsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppOrganizationIdProjectIdEventsTabsRoute,
  } as any)
const AppOrganizationIdProjectIdSettingsTabsEventsRoute =
  AppOrganizationIdProjectIdSettingsTabsEventsRouteImport.update({
    id: '/events',
    path: '/events',
    getParentRoute: () => AppOrganizationIdProjectIdSettingsTabsRoute,
  } as any)
const AppOrganizationIdProjectIdSettingsTabsDetailsRoute =
  AppOrganizationIdProjectIdSettingsTabsDetailsRouteImport.update({
    id: '/details',
    path: '/details',
    getParentRoute: () => AppOrganizationIdProjectIdSettingsTabsRoute,
  } as any)
const AppOrganizationIdProjectIdSettingsTabsClientsRoute =
  AppOrganizationIdProjectIdSettingsTabsClientsRouteImport.update({
    id: '/clients',
    path: '/clients',
    getParentRoute: () => AppOrganizationIdProjectIdSettingsTabsRoute,
  } as any)
const AppOrganizationIdProjectIdProfilesTabsPowerUsersRoute =
  AppOrganizationIdProjectIdProfilesTabsPowerUsersRouteImport.update({
    id: '/power-users',
    path: '/power-users',
    getParentRoute: () => AppOrganizationIdProjectIdProfilesTabsRoute,
  } as any)
const AppOrganizationIdProjectIdProfilesTabsIdentifiedRoute =
  AppOrganizationIdProjectIdProfilesTabsIdentifiedRouteImport.update({
    id: '/identified',
    path: '/identified',
    getParentRoute: () => AppOrganizationIdProjectIdProfilesTabsRoute,
  } as any)
const AppOrganizationIdProjectIdProfilesTabsAnonymousRoute =
  AppOrganizationIdProjectIdProfilesTabsAnonymousRouteImport.update({
    id: '/anonymous',
    path: '/anonymous',
    getParentRoute: () => AppOrganizationIdProjectIdProfilesTabsRoute,
  } as any)
const AppOrganizationIdProjectIdEventsTabsStatsRoute =
  AppOrganizationIdProjectIdEventsTabsStatsRouteImport.update({
    id: '/stats',
    path: '/stats',
    getParentRoute: () => AppOrganizationIdProjectIdEventsTabsRoute,
  } as any)
const AppOrganizationIdProjectIdEventsTabsEventsRoute =
  AppOrganizationIdProjectIdEventsTabsEventsRouteImport.update({
    id: '/events',
    path: '/events',
    getParentRoute: () => AppOrganizationIdProjectIdEventsTabsRoute,
  } as any)
const AppOrganizationIdProjectIdEventsTabsConversionsRoute =
  AppOrganizationIdProjectIdEventsTabsConversionsRouteImport.update({
    id: '/conversions',
    path: '/conversions',
    getParentRoute: () => AppOrganizationIdProjectIdEventsTabsRoute,
  } as any)
const AppOrganizationIdProjectIdDashboardsDashboardIdReportsRoute =
  AppOrganizationIdProjectIdDashboardsDashboardIdReportsRouteImport.update({
    id: '/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports',
    path: '/$organizationId/$projectId/dashboards/$dashboardId/reports',
    getParentRoute: () => AppRoute,
  } as any)
const AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRoute =
  AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRouteImport.update(
    {
      id: '/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports_/$reportId',
      path: '/$organizationId/$projectId/dashboards/$dashboardId/reports/$reportId',
      getParentRoute: () => AppRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$organizationId': typeof AppOrganizationIdRoute
  '/login': typeof AuthLoginRoute
  '/onboarding': typeof AuthOnboardingRouteWithChildren
  '/$organizationId/$projectId': typeof AppOrganizationIdProjectIdRoute
  '/$organizationId/billing': typeof AppOrganizationIdBillingRoute
  '/$organizationId/settings': typeof AppOrganizationIdSettingsRoute
  '/onboarding/step1': typeof AuthOnboardingStep1Route
  '/onboarding/': typeof AuthOnboardingIndexRoute
  '/$organizationId/$projectId/dashboards': typeof AppOrganizationIdProjectIdDashboardsRoute
  '/$organizationId/$projectId/pages': typeof AppOrganizationIdProjectIdPagesRoute
  '/$organizationId/$projectId/realtime': typeof AppOrganizationIdProjectIdRealtimeRoute
  '/$organizationId/$projectId/references': typeof AppOrganizationIdProjectIdReferencesRoute
  '/$organizationId/integrations': typeof AppOrganizationIdIntegrationsTabsRouteWithChildren
  '/$organizationId/members': typeof AppOrganizationIdMembersTabsRouteWithChildren
  '/$organizationId/$projectId/dashboards/$dashboardId': typeof AppOrganizationIdProjectIdDashboardsDashboardIdRoute
  '/$organizationId/$projectId/events': typeof AppOrganizationIdProjectIdEventsTabsRouteWithChildren
  '/$organizationId/$projectId/profiles': typeof AppOrganizationIdProjectIdProfilesTabsRouteWithChildren
  '/$organizationId/$projectId/settings': typeof AppOrganizationIdProjectIdSettingsTabsRouteWithChildren
  '/$organizationId/integrations/available': typeof AppOrganizationIdIntegrationsTabsAvailableRoute
  '/$organizationId/members/invitations': typeof AppOrganizationIdMembersTabsInvitationsRoute
  '/$organizationId/integrations/': typeof AppOrganizationIdIntegrationsTabsIndexRoute
  '/$organizationId/members/': typeof AppOrganizationIdMembersTabsIndexRoute
  '/$organizationId/$projectId/dashboards/$dashboardId/reports': typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsRoute
  '/$organizationId/$projectId/events/conversions': typeof AppOrganizationIdProjectIdEventsTabsConversionsRoute
  '/$organizationId/$projectId/events/events': typeof AppOrganizationIdProjectIdEventsTabsEventsRoute
  '/$organizationId/$projectId/events/stats': typeof AppOrganizationIdProjectIdEventsTabsStatsRoute
  '/$organizationId/$projectId/profiles/anonymous': typeof AppOrganizationIdProjectIdProfilesTabsAnonymousRoute
  '/$organizationId/$projectId/profiles/identified': typeof AppOrganizationIdProjectIdProfilesTabsIdentifiedRoute
  '/$organizationId/$projectId/profiles/power-users': typeof AppOrganizationIdProjectIdProfilesTabsPowerUsersRoute
  '/$organizationId/$projectId/settings/clients': typeof AppOrganizationIdProjectIdSettingsTabsClientsRoute
  '/$organizationId/$projectId/settings/details': typeof AppOrganizationIdProjectIdSettingsTabsDetailsRoute
  '/$organizationId/$projectId/settings/events': typeof AppOrganizationIdProjectIdSettingsTabsEventsRoute
  '/$organizationId/$projectId/events/': typeof AppOrganizationIdProjectIdEventsTabsIndexRoute
  '/$organizationId/$projectId/profiles/': typeof AppOrganizationIdProjectIdProfilesTabsIndexRoute
  '/$organizationId/$projectId/settings/': typeof AppOrganizationIdProjectIdSettingsTabsIndexRoute
  '/$organizationId/$projectId/dashboards/$dashboardId/reports/$reportId': typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$organizationId': typeof AppOrganizationIdRoute
  '/login': typeof AuthLoginRoute
  '/$organizationId/$projectId': typeof AppOrganizationIdProjectIdRoute
  '/$organizationId/billing': typeof AppOrganizationIdBillingRoute
  '/$organizationId/settings': typeof AppOrganizationIdSettingsRoute
  '/onboarding/step1': typeof AuthOnboardingStep1Route
  '/onboarding': typeof AuthOnboardingIndexRoute
  '/$organizationId/$projectId/dashboards': typeof AppOrganizationIdProjectIdDashboardsRoute
  '/$organizationId/$projectId/pages': typeof AppOrganizationIdProjectIdPagesRoute
  '/$organizationId/$projectId/realtime': typeof AppOrganizationIdProjectIdRealtimeRoute
  '/$organizationId/$projectId/references': typeof AppOrganizationIdProjectIdReferencesRoute
  '/$organizationId/integrations': typeof AppOrganizationIdIntegrationsTabsIndexRoute
  '/$organizationId/members': typeof AppOrganizationIdMembersTabsIndexRoute
  '/$organizationId/$projectId/dashboards/$dashboardId': typeof AppOrganizationIdProjectIdDashboardsDashboardIdRoute
  '/$organizationId/$projectId/events': typeof AppOrganizationIdProjectIdEventsTabsIndexRoute
  '/$organizationId/$projectId/profiles': typeof AppOrganizationIdProjectIdProfilesTabsIndexRoute
  '/$organizationId/$projectId/settings': typeof AppOrganizationIdProjectIdSettingsTabsIndexRoute
  '/$organizationId/integrations/available': typeof AppOrganizationIdIntegrationsTabsAvailableRoute
  '/$organizationId/members/invitations': typeof AppOrganizationIdMembersTabsInvitationsRoute
  '/$organizationId/$projectId/dashboards/$dashboardId/reports': typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsRoute
  '/$organizationId/$projectId/events/conversions': typeof AppOrganizationIdProjectIdEventsTabsConversionsRoute
  '/$organizationId/$projectId/events/events': typeof AppOrganizationIdProjectIdEventsTabsEventsRoute
  '/$organizationId/$projectId/events/stats': typeof AppOrganizationIdProjectIdEventsTabsStatsRoute
  '/$organizationId/$projectId/profiles/anonymous': typeof AppOrganizationIdProjectIdProfilesTabsAnonymousRoute
  '/$organizationId/$projectId/profiles/identified': typeof AppOrganizationIdProjectIdProfilesTabsIdentifiedRoute
  '/$organizationId/$projectId/profiles/power-users': typeof AppOrganizationIdProjectIdProfilesTabsPowerUsersRoute
  '/$organizationId/$projectId/settings/clients': typeof AppOrganizationIdProjectIdSettingsTabsClientsRoute
  '/$organizationId/$projectId/settings/details': typeof AppOrganizationIdProjectIdSettingsTabsDetailsRoute
  '/$organizationId/$projectId/settings/events': typeof AppOrganizationIdProjectIdSettingsTabsEventsRoute
  '/$organizationId/$projectId/dashboards/$dashboardId/reports/$reportId': typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/$organizationId': typeof AppOrganizationIdRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/onboarding': typeof AuthOnboardingRouteWithChildren
  '/_app/$organizationId_/$projectId': typeof AppOrganizationIdProjectIdRoute
  '/_app/$organizationId_/billing': typeof AppOrganizationIdBillingRoute
  '/_app/$organizationId_/settings': typeof AppOrganizationIdSettingsRoute
  '/_auth/onboarding/step1': typeof AuthOnboardingStep1Route
  '/_auth/onboarding/': typeof AuthOnboardingIndexRoute
  '/_app/$organizationId_/$projectId_/dashboards': typeof AppOrganizationIdProjectIdDashboardsRoute
  '/_app/$organizationId_/$projectId_/pages': typeof AppOrganizationIdProjectIdPagesRoute
  '/_app/$organizationId_/$projectId_/realtime': typeof AppOrganizationIdProjectIdRealtimeRoute
  '/_app/$organizationId_/$projectId_/references': typeof AppOrganizationIdProjectIdReferencesRoute
  '/_app/$organizationId_/integrations': typeof AppOrganizationIdIntegrationsRouteWithChildren
  '/_app/$organizationId_/integrations/_tabs': typeof AppOrganizationIdIntegrationsTabsRouteWithChildren
  '/_app/$organizationId_/members': typeof AppOrganizationIdMembersRouteWithChildren
  '/_app/$organizationId_/members/_tabs': typeof AppOrganizationIdMembersTabsRouteWithChildren
  '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId': typeof AppOrganizationIdProjectIdDashboardsDashboardIdRoute
  '/_app/$organizationId_/$projectId_/events': typeof AppOrganizationIdProjectIdEventsRouteWithChildren
  '/_app/$organizationId_/$projectId_/events/_tabs': typeof AppOrganizationIdProjectIdEventsTabsRouteWithChildren
  '/_app/$organizationId_/$projectId_/profiles': typeof AppOrganizationIdProjectIdProfilesRouteWithChildren
  '/_app/$organizationId_/$projectId_/profiles/_tabs': typeof AppOrganizationIdProjectIdProfilesTabsRouteWithChildren
  '/_app/$organizationId_/$projectId_/settings': typeof AppOrganizationIdProjectIdSettingsRouteWithChildren
  '/_app/$organizationId_/$projectId_/settings/_tabs': typeof AppOrganizationIdProjectIdSettingsTabsRouteWithChildren
  '/_app/$organizationId_/integrations/_tabs/available': typeof AppOrganizationIdIntegrationsTabsAvailableRoute
  '/_app/$organizationId_/members/_tabs/invitations': typeof AppOrganizationIdMembersTabsInvitationsRoute
  '/_app/$organizationId_/integrations/_tabs/': typeof AppOrganizationIdIntegrationsTabsIndexRoute
  '/_app/$organizationId_/members/_tabs/': typeof AppOrganizationIdMembersTabsIndexRoute
  '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports': typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsRoute
  '/_app/$organizationId_/$projectId_/events/_tabs/conversions': typeof AppOrganizationIdProjectIdEventsTabsConversionsRoute
  '/_app/$organizationId_/$projectId_/events/_tabs/events': typeof AppOrganizationIdProjectIdEventsTabsEventsRoute
  '/_app/$organizationId_/$projectId_/events/_tabs/stats': typeof AppOrganizationIdProjectIdEventsTabsStatsRoute
  '/_app/$organizationId_/$projectId_/profiles/_tabs/anonymous': typeof AppOrganizationIdProjectIdProfilesTabsAnonymousRoute
  '/_app/$organizationId_/$projectId_/profiles/_tabs/identified': typeof AppOrganizationIdProjectIdProfilesTabsIdentifiedRoute
  '/_app/$organizationId_/$projectId_/profiles/_tabs/power-users': typeof AppOrganizationIdProjectIdProfilesTabsPowerUsersRoute
  '/_app/$organizationId_/$projectId_/settings/_tabs/clients': typeof AppOrganizationIdProjectIdSettingsTabsClientsRoute
  '/_app/$organizationId_/$projectId_/settings/_tabs/details': typeof AppOrganizationIdProjectIdSettingsTabsDetailsRoute
  '/_app/$organizationId_/$projectId_/settings/_tabs/events': typeof AppOrganizationIdProjectIdSettingsTabsEventsRoute
  '/_app/$organizationId_/$projectId_/events/_tabs/': typeof AppOrganizationIdProjectIdEventsTabsIndexRoute
  '/_app/$organizationId_/$projectId_/profiles/_tabs/': typeof AppOrganizationIdProjectIdProfilesTabsIndexRoute
  '/_app/$organizationId_/$projectId_/settings/_tabs/': typeof AppOrganizationIdProjectIdSettingsTabsIndexRoute
  '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports_/$reportId': typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$organizationId'
    | '/login'
    | '/onboarding'
    | '/$organizationId/$projectId'
    | '/$organizationId/billing'
    | '/$organizationId/settings'
    | '/onboarding/step1'
    | '/onboarding/'
    | '/$organizationId/$projectId/dashboards'
    | '/$organizationId/$projectId/pages'
    | '/$organizationId/$projectId/realtime'
    | '/$organizationId/$projectId/references'
    | '/$organizationId/integrations'
    | '/$organizationId/members'
    | '/$organizationId/$projectId/dashboards/$dashboardId'
    | '/$organizationId/$projectId/events'
    | '/$organizationId/$projectId/profiles'
    | '/$organizationId/$projectId/settings'
    | '/$organizationId/integrations/available'
    | '/$organizationId/members/invitations'
    | '/$organizationId/integrations/'
    | '/$organizationId/members/'
    | '/$organizationId/$projectId/dashboards/$dashboardId/reports'
    | '/$organizationId/$projectId/events/conversions'
    | '/$organizationId/$projectId/events/events'
    | '/$organizationId/$projectId/events/stats'
    | '/$organizationId/$projectId/profiles/anonymous'
    | '/$organizationId/$projectId/profiles/identified'
    | '/$organizationId/$projectId/profiles/power-users'
    | '/$organizationId/$projectId/settings/clients'
    | '/$organizationId/$projectId/settings/details'
    | '/$organizationId/$projectId/settings/events'
    | '/$organizationId/$projectId/events/'
    | '/$organizationId/$projectId/profiles/'
    | '/$organizationId/$projectId/settings/'
    | '/$organizationId/$projectId/dashboards/$dashboardId/reports/$reportId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$organizationId'
    | '/login'
    | '/$organizationId/$projectId'
    | '/$organizationId/billing'
    | '/$organizationId/settings'
    | '/onboarding/step1'
    | '/onboarding'
    | '/$organizationId/$projectId/dashboards'
    | '/$organizationId/$projectId/pages'
    | '/$organizationId/$projectId/realtime'
    | '/$organizationId/$projectId/references'
    | '/$organizationId/integrations'
    | '/$organizationId/members'
    | '/$organizationId/$projectId/dashboards/$dashboardId'
    | '/$organizationId/$projectId/events'
    | '/$organizationId/$projectId/profiles'
    | '/$organizationId/$projectId/settings'
    | '/$organizationId/integrations/available'
    | '/$organizationId/members/invitations'
    | '/$organizationId/$projectId/dashboards/$dashboardId/reports'
    | '/$organizationId/$projectId/events/conversions'
    | '/$organizationId/$projectId/events/events'
    | '/$organizationId/$projectId/events/stats'
    | '/$organizationId/$projectId/profiles/anonymous'
    | '/$organizationId/$projectId/profiles/identified'
    | '/$organizationId/$projectId/profiles/power-users'
    | '/$organizationId/$projectId/settings/clients'
    | '/$organizationId/$projectId/settings/details'
    | '/$organizationId/$projectId/settings/events'
    | '/$organizationId/$projectId/dashboards/$dashboardId/reports/$reportId'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/$organizationId'
    | '/_auth/login'
    | '/_auth/onboarding'
    | '/_app/$organizationId_/$projectId'
    | '/_app/$organizationId_/billing'
    | '/_app/$organizationId_/settings'
    | '/_auth/onboarding/step1'
    | '/_auth/onboarding/'
    | '/_app/$organizationId_/$projectId_/dashboards'
    | '/_app/$organizationId_/$projectId_/pages'
    | '/_app/$organizationId_/$projectId_/realtime'
    | '/_app/$organizationId_/$projectId_/references'
    | '/_app/$organizationId_/integrations'
    | '/_app/$organizationId_/integrations/_tabs'
    | '/_app/$organizationId_/members'
    | '/_app/$organizationId_/members/_tabs'
    | '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId'
    | '/_app/$organizationId_/$projectId_/events'
    | '/_app/$organizationId_/$projectId_/events/_tabs'
    | '/_app/$organizationId_/$projectId_/profiles'
    | '/_app/$organizationId_/$projectId_/profiles/_tabs'
    | '/_app/$organizationId_/$projectId_/settings'
    | '/_app/$organizationId_/$projectId_/settings/_tabs'
    | '/_app/$organizationId_/integrations/_tabs/available'
    | '/_app/$organizationId_/members/_tabs/invitations'
    | '/_app/$organizationId_/integrations/_tabs/'
    | '/_app/$organizationId_/members/_tabs/'
    | '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports'
    | '/_app/$organizationId_/$projectId_/events/_tabs/conversions'
    | '/_app/$organizationId_/$projectId_/events/_tabs/events'
    | '/_app/$organizationId_/$projectId_/events/_tabs/stats'
    | '/_app/$organizationId_/$projectId_/profiles/_tabs/anonymous'
    | '/_app/$organizationId_/$projectId_/profiles/_tabs/identified'
    | '/_app/$organizationId_/$projectId_/profiles/_tabs/power-users'
    | '/_app/$organizationId_/$projectId_/settings/_tabs/clients'
    | '/_app/$organizationId_/$projectId_/settings/_tabs/details'
    | '/_app/$organizationId_/$projectId_/settings/_tabs/events'
    | '/_app/$organizationId_/$projectId_/events/_tabs/'
    | '/_app/$organizationId_/$projectId_/profiles/_tabs/'
    | '/_app/$organizationId_/$projectId_/settings/_tabs/'
    | '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports_/$reportId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/onboarding': {
      id: '/_auth/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof AuthOnboardingRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_app/$organizationId': {
      id: '/_app/$organizationId'
      path: '/$organizationId'
      fullPath: '/$organizationId'
      preLoaderRoute: typeof AppOrganizationIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/members': {
      id: '/_app/$organizationId_/members'
      path: '/$organizationId/members'
      fullPath: '/$organizationId/members'
      preLoaderRoute: typeof AppOrganizationIdMembersRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/integrations': {
      id: '/_app/$organizationId_/integrations'
      path: '/$organizationId/integrations'
      fullPath: '/$organizationId/integrations'
      preLoaderRoute: typeof AppOrganizationIdIntegrationsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_auth/onboarding/': {
      id: '/_auth/onboarding/'
      path: '/'
      fullPath: '/onboarding/'
      preLoaderRoute: typeof AuthOnboardingIndexRouteImport
      parentRoute: typeof AuthOnboardingRoute
    }
    '/_auth/onboarding/step1': {
      id: '/_auth/onboarding/step1'
      path: '/step1'
      fullPath: '/onboarding/step1'
      preLoaderRoute: typeof AuthOnboardingStep1RouteImport
      parentRoute: typeof AuthOnboardingRoute
    }
    '/_app/$organizationId_/settings': {
      id: '/_app/$organizationId_/settings'
      path: '/$organizationId/settings'
      fullPath: '/$organizationId/settings'
      preLoaderRoute: typeof AppOrganizationIdSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/billing': {
      id: '/_app/$organizationId_/billing'
      path: '/$organizationId/billing'
      fullPath: '/$organizationId/billing'
      preLoaderRoute: typeof AppOrganizationIdBillingRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/$projectId': {
      id: '/_app/$organizationId_/$projectId'
      path: '/$organizationId/$projectId'
      fullPath: '/$organizationId/$projectId'
      preLoaderRoute: typeof AppOrganizationIdProjectIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/$projectId_/settings': {
      id: '/_app/$organizationId_/$projectId_/settings'
      path: '/$organizationId/$projectId/settings'
      fullPath: '/$organizationId/$projectId/settings'
      preLoaderRoute: typeof AppOrganizationIdProjectIdSettingsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/$projectId_/profiles': {
      id: '/_app/$organizationId_/$projectId_/profiles'
      path: '/$organizationId/$projectId/profiles'
      fullPath: '/$organizationId/$projectId/profiles'
      preLoaderRoute: typeof AppOrganizationIdProjectIdProfilesRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/$projectId_/events': {
      id: '/_app/$organizationId_/$projectId_/events'
      path: '/$organizationId/$projectId/events'
      fullPath: '/$organizationId/$projectId/events'
      preLoaderRoute: typeof AppOrganizationIdProjectIdEventsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/members/_tabs': {
      id: '/_app/$organizationId_/members/_tabs'
      path: '/$organizationId/members'
      fullPath: '/$organizationId/members'
      preLoaderRoute: typeof AppOrganizationIdMembersTabsRouteImport
      parentRoute: typeof AppOrganizationIdMembersRoute
    }
    '/_app/$organizationId_/integrations/_tabs': {
      id: '/_app/$organizationId_/integrations/_tabs'
      path: '/$organizationId/integrations'
      fullPath: '/$organizationId/integrations'
      preLoaderRoute: typeof AppOrganizationIdIntegrationsTabsRouteImport
      parentRoute: typeof AppOrganizationIdIntegrationsRoute
    }
    '/_app/$organizationId_/$projectId_/references': {
      id: '/_app/$organizationId_/$projectId_/references'
      path: '/$organizationId/$projectId/references'
      fullPath: '/$organizationId/$projectId/references'
      preLoaderRoute: typeof AppOrganizationIdProjectIdReferencesRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/$projectId_/realtime': {
      id: '/_app/$organizationId_/$projectId_/realtime'
      path: '/$organizationId/$projectId/realtime'
      fullPath: '/$organizationId/$projectId/realtime'
      preLoaderRoute: typeof AppOrganizationIdProjectIdRealtimeRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/$projectId_/pages': {
      id: '/_app/$organizationId_/$projectId_/pages'
      path: '/$organizationId/$projectId/pages'
      fullPath: '/$organizationId/$projectId/pages'
      preLoaderRoute: typeof AppOrganizationIdProjectIdPagesRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/$projectId_/dashboards': {
      id: '/_app/$organizationId_/$projectId_/dashboards'
      path: '/$organizationId/$projectId/dashboards'
      fullPath: '/$organizationId/$projectId/dashboards'
      preLoaderRoute: typeof AppOrganizationIdProjectIdDashboardsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/members/_tabs/': {
      id: '/_app/$organizationId_/members/_tabs/'
      path: '/'
      fullPath: '/$organizationId/members/'
      preLoaderRoute: typeof AppOrganizationIdMembersTabsIndexRouteImport
      parentRoute: typeof AppOrganizationIdMembersTabsRoute
    }
    '/_app/$organizationId_/integrations/_tabs/': {
      id: '/_app/$organizationId_/integrations/_tabs/'
      path: '/'
      fullPath: '/$organizationId/integrations/'
      preLoaderRoute: typeof AppOrganizationIdIntegrationsTabsIndexRouteImport
      parentRoute: typeof AppOrganizationIdIntegrationsTabsRoute
    }
    '/_app/$organizationId_/members/_tabs/invitations': {
      id: '/_app/$organizationId_/members/_tabs/invitations'
      path: '/invitations'
      fullPath: '/$organizationId/members/invitations'
      preLoaderRoute: typeof AppOrganizationIdMembersTabsInvitationsRouteImport
      parentRoute: typeof AppOrganizationIdMembersTabsRoute
    }
    '/_app/$organizationId_/integrations/_tabs/available': {
      id: '/_app/$organizationId_/integrations/_tabs/available'
      path: '/available'
      fullPath: '/$organizationId/integrations/available'
      preLoaderRoute: typeof AppOrganizationIdIntegrationsTabsAvailableRouteImport
      parentRoute: typeof AppOrganizationIdIntegrationsTabsRoute
    }
    '/_app/$organizationId_/$projectId_/settings/_tabs': {
      id: '/_app/$organizationId_/$projectId_/settings/_tabs'
      path: '/$organizationId/$projectId/settings'
      fullPath: '/$organizationId/$projectId/settings'
      preLoaderRoute: typeof AppOrganizationIdProjectIdSettingsTabsRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdSettingsRoute
    }
    '/_app/$organizationId_/$projectId_/profiles/_tabs': {
      id: '/_app/$organizationId_/$projectId_/profiles/_tabs'
      path: '/$organizationId/$projectId/profiles'
      fullPath: '/$organizationId/$projectId/profiles'
      preLoaderRoute: typeof AppOrganizationIdProjectIdProfilesTabsRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdProfilesRoute
    }
    '/_app/$organizationId_/$projectId_/events/_tabs': {
      id: '/_app/$organizationId_/$projectId_/events/_tabs'
      path: '/$organizationId/$projectId/events'
      fullPath: '/$organizationId/$projectId/events'
      preLoaderRoute: typeof AppOrganizationIdProjectIdEventsTabsRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdEventsRoute
    }
    '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId': {
      id: '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId'
      path: '/$organizationId/$projectId/dashboards/$dashboardId'
      fullPath: '/$organizationId/$projectId/dashboards/$dashboardId'
      preLoaderRoute: typeof AppOrganizationIdProjectIdDashboardsDashboardIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/$projectId_/settings/_tabs/': {
      id: '/_app/$organizationId_/$projectId_/settings/_tabs/'
      path: '/'
      fullPath: '/$organizationId/$projectId/settings/'
      preLoaderRoute: typeof AppOrganizationIdProjectIdSettingsTabsIndexRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdSettingsTabsRoute
    }
    '/_app/$organizationId_/$projectId_/profiles/_tabs/': {
      id: '/_app/$organizationId_/$projectId_/profiles/_tabs/'
      path: '/'
      fullPath: '/$organizationId/$projectId/profiles/'
      preLoaderRoute: typeof AppOrganizationIdProjectIdProfilesTabsIndexRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdProfilesTabsRoute
    }
    '/_app/$organizationId_/$projectId_/events/_tabs/': {
      id: '/_app/$organizationId_/$projectId_/events/_tabs/'
      path: '/'
      fullPath: '/$organizationId/$projectId/events/'
      preLoaderRoute: typeof AppOrganizationIdProjectIdEventsTabsIndexRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdEventsTabsRoute
    }
    '/_app/$organizationId_/$projectId_/settings/_tabs/events': {
      id: '/_app/$organizationId_/$projectId_/settings/_tabs/events'
      path: '/events'
      fullPath: '/$organizationId/$projectId/settings/events'
      preLoaderRoute: typeof AppOrganizationIdProjectIdSettingsTabsEventsRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdSettingsTabsRoute
    }
    '/_app/$organizationId_/$projectId_/settings/_tabs/details': {
      id: '/_app/$organizationId_/$projectId_/settings/_tabs/details'
      path: '/details'
      fullPath: '/$organizationId/$projectId/settings/details'
      preLoaderRoute: typeof AppOrganizationIdProjectIdSettingsTabsDetailsRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdSettingsTabsRoute
    }
    '/_app/$organizationId_/$projectId_/settings/_tabs/clients': {
      id: '/_app/$organizationId_/$projectId_/settings/_tabs/clients'
      path: '/clients'
      fullPath: '/$organizationId/$projectId/settings/clients'
      preLoaderRoute: typeof AppOrganizationIdProjectIdSettingsTabsClientsRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdSettingsTabsRoute
    }
    '/_app/$organizationId_/$projectId_/profiles/_tabs/power-users': {
      id: '/_app/$organizationId_/$projectId_/profiles/_tabs/power-users'
      path: '/power-users'
      fullPath: '/$organizationId/$projectId/profiles/power-users'
      preLoaderRoute: typeof AppOrganizationIdProjectIdProfilesTabsPowerUsersRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdProfilesTabsRoute
    }
    '/_app/$organizationId_/$projectId_/profiles/_tabs/identified': {
      id: '/_app/$organizationId_/$projectId_/profiles/_tabs/identified'
      path: '/identified'
      fullPath: '/$organizationId/$projectId/profiles/identified'
      preLoaderRoute: typeof AppOrganizationIdProjectIdProfilesTabsIdentifiedRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdProfilesTabsRoute
    }
    '/_app/$organizationId_/$projectId_/profiles/_tabs/anonymous': {
      id: '/_app/$organizationId_/$projectId_/profiles/_tabs/anonymous'
      path: '/anonymous'
      fullPath: '/$organizationId/$projectId/profiles/anonymous'
      preLoaderRoute: typeof AppOrganizationIdProjectIdProfilesTabsAnonymousRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdProfilesTabsRoute
    }
    '/_app/$organizationId_/$projectId_/events/_tabs/stats': {
      id: '/_app/$organizationId_/$projectId_/events/_tabs/stats'
      path: '/stats'
      fullPath: '/$organizationId/$projectId/events/stats'
      preLoaderRoute: typeof AppOrganizationIdProjectIdEventsTabsStatsRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdEventsTabsRoute
    }
    '/_app/$organizationId_/$projectId_/events/_tabs/events': {
      id: '/_app/$organizationId_/$projectId_/events/_tabs/events'
      path: '/events'
      fullPath: '/$organizationId/$projectId/events/events'
      preLoaderRoute: typeof AppOrganizationIdProjectIdEventsTabsEventsRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdEventsTabsRoute
    }
    '/_app/$organizationId_/$projectId_/events/_tabs/conversions': {
      id: '/_app/$organizationId_/$projectId_/events/_tabs/conversions'
      path: '/conversions'
      fullPath: '/$organizationId/$projectId/events/conversions'
      preLoaderRoute: typeof AppOrganizationIdProjectIdEventsTabsConversionsRouteImport
      parentRoute: typeof AppOrganizationIdProjectIdEventsTabsRoute
    }
    '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports': {
      id: '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports'
      path: '/$organizationId/$projectId/dashboards/$dashboardId/reports'
      fullPath: '/$organizationId/$projectId/dashboards/$dashboardId/reports'
      preLoaderRoute: typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports_/$reportId': {
      id: '/_app/$organizationId_/$projectId_/dashboards_/$dashboardId_/reports_/$reportId'
      path: '/$organizationId/$projectId/dashboards/$dashboardId/reports/$reportId'
      fullPath: '/$organizationId/$projectId/dashboards/$dashboardId/reports/$reportId'
      preLoaderRoute: typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppOrganizationIdIntegrationsTabsRouteChildren {
  AppOrganizationIdIntegrationsTabsAvailableRoute: typeof AppOrganizationIdIntegrationsTabsAvailableRoute
  AppOrganizationIdIntegrationsTabsIndexRoute: typeof AppOrganizationIdIntegrationsTabsIndexRoute
}

const AppOrganizationIdIntegrationsTabsRouteChildren: AppOrganizationIdIntegrationsTabsRouteChildren =
  {
    AppOrganizationIdIntegrationsTabsAvailableRoute:
      AppOrganizationIdIntegrationsTabsAvailableRoute,
    AppOrganizationIdIntegrationsTabsIndexRoute:
      AppOrganizationIdIntegrationsTabsIndexRoute,
  }

const AppOrganizationIdIntegrationsTabsRouteWithChildren =
  AppOrganizationIdIntegrationsTabsRoute._addFileChildren(
    AppOrganizationIdIntegrationsTabsRouteChildren,
  )

interface AppOrganizationIdIntegrationsRouteChildren {
  AppOrganizationIdIntegrationsTabsRoute: typeof AppOrganizationIdIntegrationsTabsRouteWithChildren
}

const AppOrganizationIdIntegrationsRouteChildren: AppOrganizationIdIntegrationsRouteChildren =
  {
    AppOrganizationIdIntegrationsTabsRoute:
      AppOrganizationIdIntegrationsTabsRouteWithChildren,
  }

const AppOrganizationIdIntegrationsRouteWithChildren =
  AppOrganizationIdIntegrationsRoute._addFileChildren(
    AppOrganizationIdIntegrationsRouteChildren,
  )

interface AppOrganizationIdMembersTabsRouteChildren {
  AppOrganizationIdMembersTabsInvitationsRoute: typeof AppOrganizationIdMembersTabsInvitationsRoute
  AppOrganizationIdMembersTabsIndexRoute: typeof AppOrganizationIdMembersTabsIndexRoute
}

const AppOrganizationIdMembersTabsRouteChildren: AppOrganizationIdMembersTabsRouteChildren =
  {
    AppOrganizationIdMembersTabsInvitationsRoute:
      AppOrganizationIdMembersTabsInvitationsRoute,
    AppOrganizationIdMembersTabsIndexRoute:
      AppOrganizationIdMembersTabsIndexRoute,
  }

const AppOrganizationIdMembersTabsRouteWithChildren =
  AppOrganizationIdMembersTabsRoute._addFileChildren(
    AppOrganizationIdMembersTabsRouteChildren,
  )

interface AppOrganizationIdMembersRouteChildren {
  AppOrganizationIdMembersTabsRoute: typeof AppOrganizationIdMembersTabsRouteWithChildren
}

const AppOrganizationIdMembersRouteChildren: AppOrganizationIdMembersRouteChildren =
  {
    AppOrganizationIdMembersTabsRoute:
      AppOrganizationIdMembersTabsRouteWithChildren,
  }

const AppOrganizationIdMembersRouteWithChildren =
  AppOrganizationIdMembersRoute._addFileChildren(
    AppOrganizationIdMembersRouteChildren,
  )

interface AppOrganizationIdProjectIdEventsTabsRouteChildren {
  AppOrganizationIdProjectIdEventsTabsConversionsRoute: typeof AppOrganizationIdProjectIdEventsTabsConversionsRoute
  AppOrganizationIdProjectIdEventsTabsEventsRoute: typeof AppOrganizationIdProjectIdEventsTabsEventsRoute
  AppOrganizationIdProjectIdEventsTabsStatsRoute: typeof AppOrganizationIdProjectIdEventsTabsStatsRoute
  AppOrganizationIdProjectIdEventsTabsIndexRoute: typeof AppOrganizationIdProjectIdEventsTabsIndexRoute
}

const AppOrganizationIdProjectIdEventsTabsRouteChildren: AppOrganizationIdProjectIdEventsTabsRouteChildren =
  {
    AppOrganizationIdProjectIdEventsTabsConversionsRoute:
      AppOrganizationIdProjectIdEventsTabsConversionsRoute,
    AppOrganizationIdProjectIdEventsTabsEventsRoute:
      AppOrganizationIdProjectIdEventsTabsEventsRoute,
    AppOrganizationIdProjectIdEventsTabsStatsRoute:
      AppOrganizationIdProjectIdEventsTabsStatsRoute,
    AppOrganizationIdProjectIdEventsTabsIndexRoute:
      AppOrganizationIdProjectIdEventsTabsIndexRoute,
  }

const AppOrganizationIdProjectIdEventsTabsRouteWithChildren =
  AppOrganizationIdProjectIdEventsTabsRoute._addFileChildren(
    AppOrganizationIdProjectIdEventsTabsRouteChildren,
  )

interface AppOrganizationIdProjectIdEventsRouteChildren {
  AppOrganizationIdProjectIdEventsTabsRoute: typeof AppOrganizationIdProjectIdEventsTabsRouteWithChildren
}

const AppOrganizationIdProjectIdEventsRouteChildren: AppOrganizationIdProjectIdEventsRouteChildren =
  {
    AppOrganizationIdProjectIdEventsTabsRoute:
      AppOrganizationIdProjectIdEventsTabsRouteWithChildren,
  }

const AppOrganizationIdProjectIdEventsRouteWithChildren =
  AppOrganizationIdProjectIdEventsRoute._addFileChildren(
    AppOrganizationIdProjectIdEventsRouteChildren,
  )

interface AppOrganizationIdProjectIdProfilesTabsRouteChildren {
  AppOrganizationIdProjectIdProfilesTabsAnonymousRoute: typeof AppOrganizationIdProjectIdProfilesTabsAnonymousRoute
  AppOrganizationIdProjectIdProfilesTabsIdentifiedRoute: typeof AppOrganizationIdProjectIdProfilesTabsIdentifiedRoute
  AppOrganizationIdProjectIdProfilesTabsPowerUsersRoute: typeof AppOrganizationIdProjectIdProfilesTabsPowerUsersRoute
  AppOrganizationIdProjectIdProfilesTabsIndexRoute: typeof AppOrganizationIdProjectIdProfilesTabsIndexRoute
}

const AppOrganizationIdProjectIdProfilesTabsRouteChildren: AppOrganizationIdProjectIdProfilesTabsRouteChildren =
  {
    AppOrganizationIdProjectIdProfilesTabsAnonymousRoute:
      AppOrganizationIdProjectIdProfilesTabsAnonymousRoute,
    AppOrganizationIdProjectIdProfilesTabsIdentifiedRoute:
      AppOrganizationIdProjectIdProfilesTabsIdentifiedRoute,
    AppOrganizationIdProjectIdProfilesTabsPowerUsersRoute:
      AppOrganizationIdProjectIdProfilesTabsPowerUsersRoute,
    AppOrganizationIdProjectIdProfilesTabsIndexRoute:
      AppOrganizationIdProjectIdProfilesTabsIndexRoute,
  }

const AppOrganizationIdProjectIdProfilesTabsRouteWithChildren =
  AppOrganizationIdProjectIdProfilesTabsRoute._addFileChildren(
    AppOrganizationIdProjectIdProfilesTabsRouteChildren,
  )

interface AppOrganizationIdProjectIdProfilesRouteChildren {
  AppOrganizationIdProjectIdProfilesTabsRoute: typeof AppOrganizationIdProjectIdProfilesTabsRouteWithChildren
}

const AppOrganizationIdProjectIdProfilesRouteChildren: AppOrganizationIdProjectIdProfilesRouteChildren =
  {
    AppOrganizationIdProjectIdProfilesTabsRoute:
      AppOrganizationIdProjectIdProfilesTabsRouteWithChildren,
  }

const AppOrganizationIdProjectIdProfilesRouteWithChildren =
  AppOrganizationIdProjectIdProfilesRoute._addFileChildren(
    AppOrganizationIdProjectIdProfilesRouteChildren,
  )

interface AppOrganizationIdProjectIdSettingsTabsRouteChildren {
  AppOrganizationIdProjectIdSettingsTabsClientsRoute: typeof AppOrganizationIdProjectIdSettingsTabsClientsRoute
  AppOrganizationIdProjectIdSettingsTabsDetailsRoute: typeof AppOrganizationIdProjectIdSettingsTabsDetailsRoute
  AppOrganizationIdProjectIdSettingsTabsEventsRoute: typeof AppOrganizationIdProjectIdSettingsTabsEventsRoute
  AppOrganizationIdProjectIdSettingsTabsIndexRoute: typeof AppOrganizationIdProjectIdSettingsTabsIndexRoute
}

const AppOrganizationIdProjectIdSettingsTabsRouteChildren: AppOrganizationIdProjectIdSettingsTabsRouteChildren =
  {
    AppOrganizationIdProjectIdSettingsTabsClientsRoute:
      AppOrganizationIdProjectIdSettingsTabsClientsRoute,
    AppOrganizationIdProjectIdSettingsTabsDetailsRoute:
      AppOrganizationIdProjectIdSettingsTabsDetailsRoute,
    AppOrganizationIdProjectIdSettingsTabsEventsRoute:
      AppOrganizationIdProjectIdSettingsTabsEventsRoute,
    AppOrganizationIdProjectIdSettingsTabsIndexRoute:
      AppOrganizationIdProjectIdSettingsTabsIndexRoute,
  }

const AppOrganizationIdProjectIdSettingsTabsRouteWithChildren =
  AppOrganizationIdProjectIdSettingsTabsRoute._addFileChildren(
    AppOrganizationIdProjectIdSettingsTabsRouteChildren,
  )

interface AppOrganizationIdProjectIdSettingsRouteChildren {
  AppOrganizationIdProjectIdSettingsTabsRoute: typeof AppOrganizationIdProjectIdSettingsTabsRouteWithChildren
}

const AppOrganizationIdProjectIdSettingsRouteChildren: AppOrganizationIdProjectIdSettingsRouteChildren =
  {
    AppOrganizationIdProjectIdSettingsTabsRoute:
      AppOrganizationIdProjectIdSettingsTabsRouteWithChildren,
  }

const AppOrganizationIdProjectIdSettingsRouteWithChildren =
  AppOrganizationIdProjectIdSettingsRoute._addFileChildren(
    AppOrganizationIdProjectIdSettingsRouteChildren,
  )

interface AppRouteChildren {
  AppOrganizationIdRoute: typeof AppOrganizationIdRoute
  AppOrganizationIdProjectIdRoute: typeof AppOrganizationIdProjectIdRoute
  AppOrganizationIdBillingRoute: typeof AppOrganizationIdBillingRoute
  AppOrganizationIdSettingsRoute: typeof AppOrganizationIdSettingsRoute
  AppOrganizationIdProjectIdDashboardsRoute: typeof AppOrganizationIdProjectIdDashboardsRoute
  AppOrganizationIdProjectIdPagesRoute: typeof AppOrganizationIdProjectIdPagesRoute
  AppOrganizationIdProjectIdRealtimeRoute: typeof AppOrganizationIdProjectIdRealtimeRoute
  AppOrganizationIdProjectIdReferencesRoute: typeof AppOrganizationIdProjectIdReferencesRoute
  AppOrganizationIdIntegrationsRoute: typeof AppOrganizationIdIntegrationsRouteWithChildren
  AppOrganizationIdMembersRoute: typeof AppOrganizationIdMembersRouteWithChildren
  AppOrganizationIdProjectIdDashboardsDashboardIdRoute: typeof AppOrganizationIdProjectIdDashboardsDashboardIdRoute
  AppOrganizationIdProjectIdEventsRoute: typeof AppOrganizationIdProjectIdEventsRouteWithChildren
  AppOrganizationIdProjectIdProfilesRoute: typeof AppOrganizationIdProjectIdProfilesRouteWithChildren
  AppOrganizationIdProjectIdSettingsRoute: typeof AppOrganizationIdProjectIdSettingsRouteWithChildren
  AppOrganizationIdProjectIdDashboardsDashboardIdReportsRoute: typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsRoute
  AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRoute: typeof AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppOrganizationIdRoute: AppOrganizationIdRoute,
  AppOrganizationIdProjectIdRoute: AppOrganizationIdProjectIdRoute,
  AppOrganizationIdBillingRoute: AppOrganizationIdBillingRoute,
  AppOrganizationIdSettingsRoute: AppOrganizationIdSettingsRoute,
  AppOrganizationIdProjectIdDashboardsRoute:
    AppOrganizationIdProjectIdDashboardsRoute,
  AppOrganizationIdProjectIdPagesRoute: AppOrganizationIdProjectIdPagesRoute,
  AppOrganizationIdProjectIdRealtimeRoute:
    AppOrganizationIdProjectIdRealtimeRoute,
  AppOrganizationIdProjectIdReferencesRoute:
    AppOrganizationIdProjectIdReferencesRoute,
  AppOrganizationIdIntegrationsRoute:
    AppOrganizationIdIntegrationsRouteWithChildren,
  AppOrganizationIdMembersRoute: AppOrganizationIdMembersRouteWithChildren,
  AppOrganizationIdProjectIdDashboardsDashboardIdRoute:
    AppOrganizationIdProjectIdDashboardsDashboardIdRoute,
  AppOrganizationIdProjectIdEventsRoute:
    AppOrganizationIdProjectIdEventsRouteWithChildren,
  AppOrganizationIdProjectIdProfilesRoute:
    AppOrganizationIdProjectIdProfilesRouteWithChildren,
  AppOrganizationIdProjectIdSettingsRoute:
    AppOrganizationIdProjectIdSettingsRouteWithChildren,
  AppOrganizationIdProjectIdDashboardsDashboardIdReportsRoute:
    AppOrganizationIdProjectIdDashboardsDashboardIdReportsRoute,
  AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRoute:
    AppOrganizationIdProjectIdDashboardsDashboardIdReportsReportIdRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthOnboardingRouteChildren {
  AuthOnboardingStep1Route: typeof AuthOnboardingStep1Route
  AuthOnboardingIndexRoute: typeof AuthOnboardingIndexRoute
}

const AuthOnboardingRouteChildren: AuthOnboardingRouteChildren = {
  AuthOnboardingStep1Route: AuthOnboardingStep1Route,
  AuthOnboardingIndexRoute: AuthOnboardingIndexRoute,
}

const AuthOnboardingRouteWithChildren = AuthOnboardingRoute._addFileChildren(
  AuthOnboardingRouteChildren,
)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthOnboardingRoute: typeof AuthOnboardingRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthOnboardingRoute: AuthOnboardingRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
